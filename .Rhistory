Proportion_MET = (1 - Proportion)) %>% select(-Proportion) %>%
rename(Proportion = Proportion_MET) %>%
mutate(tx_perspective = ifelse(Perspective == "Societal", "MET (Societal)",
ifelse(Perspective == "Health Sector", "MET (Health Sector)", NA))) %>%
select(-Scenario)
View(tbl_df_CEAC_MET)
View(tbl_df_CEAC_BNX)
tbl_df_CEAC_BNX <- cbind(tbl_df_labels, tbl_df_CEAC_long) %>% as_tibble() %>% mutate(Treatment = "BNX",
tx_perspective = ifelse(Perspective == "Societal", "BNX (Societal)",
ifelse(Perspective == "Health Sector", "BNX (Health Sector)", NA))) %>%
select(-Scenario, Threshold, Perspective, Treatment, Proportion, tx_perspective)
View(tbl_df_CEAC_BNX)
tbl_df_CEAC_BNX <- cbind(tbl_df_labels, tbl_df_CEAC_long) %>% as_tibble() %>% mutate(Treatment = "BNX",
tx_perspective = ifelse(Perspective == "Societal", "BNX (Societal)",
ifelse(Perspective == "Health Sector", "BNX (Health Sector)", NA))) %>%
select(-Scenario) %>% col_order <- c("Threshold", "Perspective", "Treatment", "Proportion", "tx_perspective")
View(tbl_df_CEAC_BNX)
tbl_df_CEAC_BNX <- cbind(tbl_df_labels, tbl_df_CEAC_long) %>% as_tibble() %>% mutate(Treatment = "BNX",
tx_perspective = ifelse(Perspective == "Societal", "BNX (Societal)",
ifelse(Perspective == "Health Sector", "BNX (Health Sector)", NA))) %>%
select(-Scenario) %>% relocate("Proportion", .after = "Treatment")
View(tbl_df_CEAC_BNX)
View(tbl_df_CEAC_MET)
tbl_df_CEAC <- rbind(tbl_df_CEAC_BNX, tbl_df_CEAC_MET)
View(tbl_df_CEAC)
tbl_df_CEAC_plot <- rbind(tbl_df_CEAC_BNX, tbl_df_CEAC_MET)
View(tbl_df_CEAC)
#################
### Plot CEAC ###
#################
ggplot(data = tbl_df_CEAC_plot, aes(x = Threshold, group = tx_perspective)) +
scale_color_manual(name = '',
breaks = c('BNX (Societal)', 'BNX (Health Sector)', 'MET (Societal)', 'MET (Health Sector)'),
values = c('BNX (Societal)' = "#313695", 'BNX (Health Sector)' = "#f46d43", 'MET (Societal)' = "#2166ac", 'MET (Health Sector)' = "#d7191c")) +
geom_line(linetype = "solid", size = 1) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
theme_classic()
#################
### Plot CEAC ###
#################
ggplot(data = tbl_df_CEAC_plot, aes(x = Threshold, group = tx_perspective)) +
scale_color_manual(name = '',
breaks = c('BNX (Societal)', 'BNX (Health Sector)', 'MET (Societal)', 'MET (Health Sector)'),
values = c('BNX (Societal)' = "#313695", 'BNX (Health Sector)' = "#f46d43", 'MET (Societal)' = "#2166ac", 'MET (Health Sector)' = "#d7191c")) +
geom_line(y = Proportion, linetype = "solid", size = 1) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
theme_classic()
View(tbl_df_CEAC_plot)
tbl_df_CEAC_plot <- rbind(tbl_df_CEAC_BNX, tbl_df_CEAC_MET)
#################
### Plot CEAC ###
#################
ggplot(data = tbl_df_CEAC_plot, aes(x = Threshold, group = tx_perspective)) +
scale_color_manual(name = '',
breaks = c('BNX (Societal)', 'BNX (Health Sector)', 'MET (Societal)', 'MET (Health Sector)'),
values = c('BNX (Societal)' = "#313695", 'BNX (Health Sector)' = "#f46d43", 'MET (Societal)' = "#2166ac", 'MET (Health Sector)' = "#d7191c")) +
geom_line(y = Proportion, linetype = "solid", size = 1) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
theme_classic()
#################
### Plot CEAC ###
#################
ggplot(data = tbl_df_CEAC_plot, aes(x = Threshold, group = tx_perspective)) +
scale_color_manual(name = '',
breaks = c('BNX (Societal)', 'BNX (Health Sector)', 'MET (Societal)', 'MET (Health Sector)'),
values = c('BNX (Societal)' = "#313695", 'BNX (Health Sector)' = "#f46d43", 'MET (Societal)' = "#2166ac", 'MET (Health Sector)' = "#d7191c")) +
geom_line(aes(y = Proportion, linetype = "solid", size = 1)) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
theme_classic()
#################
### Plot CEAC ###
#################
ggplot(data = tbl_df_CEAC_plot, aes(x = Threshold, group = tx_perspective)) +
scale_color_manual(name = '',
breaks = c('BNX (Societal)', 'BNX (Health Sector)', 'MET (Societal)', 'MET (Health Sector)'),
values = c('BNX (Societal)' = "#313695", 'BNX (Health Sector)' = "#f46d43", 'MET (Societal)' = "#2166ac", 'MET (Health Sector)' = "#d7191c")) +
geom_line(aes(y = Proportion, linetype = "solid", size = 0.5)) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
theme_classic()
#################
### Plot CEAC ###
#################
ggplot(data = tbl_df_CEAC_plot, aes(x = Threshold, group = tx_perspective)) +
scale_color_manual(name = '',
breaks = c('BNX (Societal)', 'BNX (Health Sector)', 'MET (Societal)', 'MET (Health Sector)'),
values = c('BNX (Societal)' = "#313695", 'BNX (Health Sector)' = "#f46d43", 'MET (Societal)' = "#2166ac", 'MET (Health Sector)' = "#d7191c")) +
geom_line(aes(y = Proportion, linetype = "solid", size = 0.5))
View(tbl_df_CEAC_plot)
tbl_df_CEAC_mid <- tbl_df_CEAC_plot %>% mutate(p_BNX_soc = ifelse(tx_perspective == "BNX (Societal)", Proportion, NA),
p_BNX_hs = ifelse(tx_perspective == "BNX (Health Sector)", Proportion, NA),
p_MET_soc = ifelse(tx_perspective == "MET (Societal)", Proportion, NA),
p_MET_hs = ifelse(tx_perspective == "MET (Health Sector)", Proportion, NA))
View(tbl_df_CEAC_mid)
tbl_df_CEAC_BNX_soc <- tbl_df_CEAC_mid %>% select(threshold, p_BNX_soc)
tbl_df_CEAC_BNX_soc <- tbl_df_CEAC_mid %>% select(Threshold, p_BNX_soc)
View(tbl_df_CEAC_BNX_soc)
tbl_df_CEAC_BNX_soc <- tbl_df_CEAC_mid %>% select(Threshold, p_BNX_soc) %>% na.omit()
View(tbl_df_CEAC_BNX_soc)
tbl_df_CEAC_BNX_soc <- tbl_df_CEAC_mid %>% select(Threshold, p_BNX_soc) %>% na.omit()
tbl_df_CEAC_BNX_hs  <- tbl_df_CEAC_mid %>% select(Threshold, p_BNX_hs) %>% na.omit()
tbl_df_CEAC_MET_soc <- tbl_df_CEAC_mid %>% select(Threshold, p_MET_soc) %>% na.omit()
tbl_df_CEAC_MET_hs  <- tbl_df_CEAC_mid %>% select(Threshold, p_MET_hs) %>% na.omit()
View(tbl_df_CEAC_MET_hs)
tbl_df_CEAC_temp1 <- left_join(tbl_df_CEAC_BNX_soc, tbl_df_CEAC_BNX_hs, by = join_by("Threshold" == "Threshold"))
tbl_df_CEAC_temp1 <- left_join(tbl_df_CEAC_BNX_soc, tbl_df_CEAC_BNX_hs, by = c("Threshold" == "Threshold"))
tbl_df_CEAC_temp1 <- merge(x = tbl_df_CEAC_BNX_soc, y = tbl_df_CEAC_BNX_hs,
by = "Threshold", all.x = TRUE)
View(tbl_df_CEAC_temp1)
tbl_df_CEAC_temp1 <- merge(x = tbl_df_CEAC_BNX_soc, y = tbl_df_CEAC_MET_soc,
by = "Threshold", all.x = TRUE)
View(tbl_df_CEAC_temp1)
tbl_df_CEAC_temp2 <- merge(x = tbl_df_CEAC_temp1, y = tbl_df_CEAC_BNX_hs,
by = "Threshold", all.x = TRUE)
View(tbl_df_CEAC_temp2)
tbl_df_CEAC_plot  <- merge(x = tbl_df_CEAC_temp2, y = tbl_df_CEAC_MET_hs,
by = "Threshold", all.x = TRUE)
View(tbl_df_CEAC_plot)
#################
### Plot CEAC ###
#################
ggplot(data = tbl_df_CEAC_plot, aes(x = Threshold)) +
#scale_color_manual(name = '',
#                   breaks = c('BNX (Societal)', 'BNX (Health Sector)', 'MET (Societal)', 'MET (Health Sector)'),
#                   values = c('BNX (Societal)' = "#313695", 'BNX (Health Sector)' = "#f46d43", 'MET (Societal)' = "#2166ac", 'MET (Health Sector)' = "#d7191c")) +
geom_line(aes(y = p_BNX_hs, linetype = "solid", colour = "#f46d43")) +
geom_line(aes(y = p_MET_hs, linetype = "solid", colour = "#d7191c")) +
geom_line(aes(y = p_BNX_soc, linetype = "solid", colour = "#313695")) +
geom_line(aes(y = p_MET_soc, linetype = "solid", colour = "#2166ac")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
theme_classic()
#################
### Plot CEAC ###
#################
ggplot(data = tbl_df_CEAC_plot, aes(x = Threshold)) +
#scale_color_manual(name = '',
#                   breaks = c('BNX (Societal)', 'BNX (Health Sector)', 'MET (Societal)', 'MET (Health Sector)'),
#                   values = c('BNX (Societal)' = "#313695", 'BNX (Health Sector)' = "#f46d43", 'MET (Societal)' = "#2166ac", 'MET (Health Sector)' = "#d7191c")) +
geom_line(aes(y = p_BNX_hs, linetype = "dashed", colour = "#313695")) +
geom_line(aes(y = p_MET_hs, linetype = "dashed", colour = "#d7191c")) +
geom_line(aes(y = p_BNX_soc, linetype = "solid", colour = "#313695")) +
geom_line(aes(y = p_MET_soc, linetype = "solid", colour = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
theme_classic()
#################
### Plot CEAC ###
#################
ggplot(data = tbl_df_CEAC_plot, aes(x = Threshold)) +
#scale_color_manual(name = '',
#                   breaks = c('BNX (Societal)', 'BNX (Health Sector)', 'MET (Societal)', 'MET (Health Sector)'),
#                   values = c('BNX (Societal)' = "#313695", 'BNX (Health Sector)' = "#f46d43", 'MET (Societal)' = "#2166ac", 'MET (Health Sector)' = "#d7191c")) +
geom_line(aes(y = p_BNX_hs, linetype = "dashed", colour = "#313695")) +
geom_line(aes(y = p_MET_hs, linetype = "dashed", colour = "#d7191c")) +
geom_line(aes(y = p_BNX_soc, linetype = "solid", colour = "#313695")) +
geom_line(aes(y = p_MET_soc, linetype = "solid", colour = "#d7191c")) #+
#################
### Plot CEAC ###
#################
ggplot() +
geom_line(aes(data = tbl_df_CEAC_plot, x = Threshold, y = p_BNX_hs, linetype = "dashed", colour = "#313695")) +
geom_line(aes(data = tbl_df_CEAC_plot, x = Threshold, y = p_MET_hs, linetype = "dashed", colour = "#d7191c")) +
geom_line(aes(data = tbl_df_CEAC_plot, x = Threshold, y = p_BNX_soc, linetype = "solid", colour = "#313695")) +
geom_line(aes(data = tbl_df_CEAC_plot, x = Threshold, y = p_MET_soc, linetype = "solid", colour = "#d7191c")) #+
#################
### Plot CEAC ###
#################
ggplot() +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", colour = "#313695")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", colour = "#d7191c")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", colour = "#313695")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", colour = "#d7191c")) #+
#################
### Plot CEAC ###
#################
ggplot() +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", colour = "#313695")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", colour = "#d7191c")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", colour = "#313695")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", colour = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
#theme_classic()
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom",
text = element_text(size = 15))
#################
### Plot CEAC ###
#################
ggplot() +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", colour = "#313695")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", colour = "#d7191c")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", colour = "#313695")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", colour = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
#theme_classic()
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "right",
text = element_text(size = 15))
#################
### Plot CEAC ###
#################
plot_CEAC <- ggplot() +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", colour = "#313695")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", colour = "#d7191c")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", colour = "#313695")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", colour = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
#theme_classic()
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "right",
text = element_text(size = 15))
# Output full plot
ggsave(plot_CEAC,
filename = "Plots/PSA/CEAC.png",
width = 10, height = 7, dpi = 350)
View(tbl_df_CEAC_plot)
#################
### Plot CEAC ###
#################
plot_CEAC <- ggplot() +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", color = "#313695")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", color = "#d7191c")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", color = "#313695")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", color = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
#theme_classic()
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "right",
text = element_text(size = 15))
# Output full plot
ggsave(plot_CEAC,
filename = "Plots/PSA/CEAC.png",
width = 10, height = 7, dpi = 350)
tbl_df_CEAC_plot <- rbind(tbl_df_CEAC_BNX, tbl_df_CEAC_MET)
tbl_df_CEAC_mid <- tbl_df_CEAC_plot %>% mutate(p_BNX_soc = ifelse(tx_perspective == "BNX (Societal)", Proportion, NA),
p_BNX_hs = ifelse(tx_perspective == "BNX (Health Sector)", Proportion, NA),
p_MET_soc = ifelse(tx_perspective == "MET (Societal)", Proportion, NA),
p_MET_hs = ifelse(tx_perspective == "MET (Health Sector)", Proportion, NA))
tbl_df_CEAC_BNX_soc <- tbl_df_CEAC_mid %>% select(Threshold, p_BNX_soc) %>% na.omit()
tbl_df_CEAC_BNX_hs  <- tbl_df_CEAC_mid %>% select(Threshold, p_BNX_hs) %>% na.omit()
tbl_df_CEAC_MET_soc <- tbl_df_CEAC_mid %>% select(Threshold, p_MET_soc) %>% na.omit()
tbl_df_CEAC_MET_hs  <- tbl_df_CEAC_mid %>% select(Threshold, p_MET_hs) %>% na.omit()
tbl_df_CEAC_temp1 <- merge(x = tbl_df_CEAC_BNX_soc, y = tbl_df_CEAC_MET_soc,
by = "Threshold", all.x = TRUE)
tbl_df_CEAC_temp2 <- merge(x = tbl_df_CEAC_temp1, y = tbl_df_CEAC_BNX_hs,
by = "Threshold", all.x = TRUE)
tbl_df_CEAC_plot  <- merge(x = tbl_df_CEAC_temp2, y = tbl_df_CEAC_MET_hs,
by = "Threshold", all.x = TRUE)
tbl_df_CEAC_temp1 <- rbind(tbl_df_CEAC_BNX, tbl_df_CEAC_MET)
tbl_df_CEAC_temp2 <- tbl_df_CEAC_temp1 %>% mutate(p_BNX_soc = ifelse(tx_perspective == "BNX (Societal)", Proportion, NA),
p_BNX_hs = ifelse(tx_perspective == "BNX (Health Sector)", Proportion, NA),
p_MET_soc = ifelse(tx_perspective == "MET (Societal)", Proportion, NA),
p_MET_hs = ifelse(tx_perspective == "MET (Health Sector)", Proportion, NA))
tbl_df_CEAC_BNX_soc <- tbl_df_CEAC_temp2 %>% select(Threshold, p_BNX_soc) %>% na.omit()
tbl_df_CEAC_BNX_hs  <- tbl_df_CEAC_temp2 %>% select(Threshold, p_BNX_hs) %>% na.omit()
tbl_df_CEAC_MET_soc <- tbl_df_CEAC_temp2 %>% select(Threshold, p_MET_soc) %>% na.omit()
tbl_df_CEAC_MET_hs  <- tbl_df_CEAC_temp2 %>% select(Threshold, p_MET_hs) %>% na.omit()
tbl_df_CEAC_temp3 <- merge(x = tbl_df_CEAC_BNX_soc, y = tbl_df_CEAC_MET_soc,
by = "Threshold", all.x = TRUE)
tbl_df_CEAC_temp4 <- merge(x = tbl_df_CEAC_temp3, y = tbl_df_CEAC_BNX_hs,
by = "Threshold", all.x = TRUE)
tbl_df_CEAC_plot  <- merge(x = tbl_df_CEAC_temp4, y = tbl_df_CEAC_MET_hs,
by = "Threshold", all.x = TRUE)
View(tbl_df_CEAC_plot)
#################
### Plot CEAC ###
#################
plot_CEAC <- ggplot() +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", color = "#0080C6")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", color = "#FFC20E")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", color = "#313695")) +
geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", color = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
#theme_classic()
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "right",
text = element_text(size = 15))
# Output full plot
ggsave(plot_CEAC,
filename = "Plots/PSA/CEAC.png",
width = 10, height = 7, dpi = 350)
tbl_df_CEAC_BNX <- cbind(tbl_df_labels, tbl_df_CEAC_long) %>% as_tibble() %>% mutate(Treatment = "BNX",
tx_perspective = ifelse(Perspective == "Societal", "BNX (Societal)",
ifelse(Perspective == "Health Sector", "BNX (Health Sector)", NA))) %>%
select(-Scenario) %>% relocate("Proportion", .after = "Treatment")
tbl_df_CEAC_MET <- cbind(tbl_df_labels, tbl_df_CEAC_long) %>% as_tibble() %>% mutate(Treatment = "MET",
Proportion_MET = (1 - Proportion)) %>% select(-Proportion) %>%
rename(Proportion = Proportion_MET) %>%
mutate(tx_perspective = ifelse(Perspective == "Societal", "MET (Societal)",
ifelse(Perspective == "Health Sector", "MET (Health Sector)", NA))) %>%
select(-Scenario)
tbl_df_CEAC_temp1 <- rbind(tbl_df_CEAC_BNX, tbl_df_CEAC_MET)
View(tbl_df_CEAC_temp1)
ggplot(data = tbl_df_CEAC_temp1) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", color = "#0080C6")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", color = "#FFC20E")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", color = "#313695")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", color = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
#theme_classic()
geom_line(aes(linetype = Perspective, color = Treatment)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "right",
text = element_text(size = 15))
ggplot(data = tbl_df_CEAC_temp1, x = Threshold, y = Proportion) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", color = "#0080C6")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", color = "#FFC20E")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", color = "#313695")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", color = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
#theme_classic()
geom_line(aes(linetype = Perspective, color = Treatment)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "right",
text = element_text(size = 15))
ggplot(data = tbl_df_CEAC_temp1, aes(x = Threshold, y = Proportion)) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", color = "#0080C6")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", color = "#FFC20E")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", color = "#313695")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", color = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
#theme_classic()
geom_line(aes(linetype = Perspective, color = Treatment)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "right",
text = element_text(size = 15))
ggplot(data = tbl_df_CEAC_temp1, aes(x = Threshold, y = Proportion)) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", color = "#0080C6")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", color = "#FFC20E")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", color = "#313695")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", color = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
#theme_classic()
geom_line(aes(linetype = Perspective, color = Treatment)) +
scale_linetype_manual(values = c("twodash", "solid"))+
scale_color_manual(values=c('#000000','#E69F00'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "right",
text = element_text(size = 15))
plot_CEAC <- ggplot(data = tbl_df_CEAC_temp1, aes(x = Threshold, y = Proportion)) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", color = "#0080C6")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", color = "#FFC20E")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", color = "#313695")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", color = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
#theme_classic()
geom_line(aes(linetype = Perspective, color = Treatment)) +
scale_linetype_manual(values = c("twodash", "solid"))+
scale_color_manual(values=c('#000000','#E69F00'))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "right",
text = element_text(size = 15))
# Output full plot
ggsave(plot_CEAC,
filename = "Plots/PSA/CEAC.png",
width = 10, height = 7, dpi = 350)
#################
### Plot CEAC ###
#################
plot_CEAC <- ggplot(data = tbl_df_CEAC_temp1, aes(x = Threshold, y = Proportion)) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_hs, linetype = "dashed", color = "#0080C6")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_hs, linetype = "dashed", color = "#FFC20E")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_BNX_soc, linetype = "solid", color = "#313695")) +
#geom_line(data = tbl_df_CEAC_plot, aes(x = Threshold, y = p_MET_soc, linetype = "solid", color = "#d7191c")) +
#geom_line(aes(y = p_BNX_CE, colour = "#f46d43")) +
#geom_line(aes(y = p_MET_CE, colour = "#313695")) +
#theme_classic()
geom_line(aes(linetype = Perspective, color = Treatment)) +
scale_linetype_manual(values = c("twodash", "solid"))+
scale_color_manual(values=c('#000000','#E69F00'))+
scale_x_continuous(labels = scales::dollar_format(scale = .001, suffix = "K")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "right",
text = element_text(size = 15))
# Output full plot
ggsave(plot_CEAC,
filename = "Plots/PSA/CEAC.png",
width = 10, height = 7, dpi = 350)
rm(list = ls()) # to clean the workspace
library(dplyr)    # to manipulate data
library(reshape2) # to transform data
library(ggplot2)  # for nice looking plots
library(scales)   # for dollar signs and commas
library(dampack)  # for CEA and calculate ICERs
library(tidyverse)
library(rbenchmark)
library(microbenchmark)
library(tictoc)
library(rBeta2009)
library(parallel)
library(foreach)
library(doParallel)
library(tidyr)
# Call model setup functions
source("R/input_parameter_functions.R")
source("R/model_setup_functions.R")
source("R/calibration_functions.R")
source("R/ICER_functions.R")
source("R/generate_psa_parameters.R")
# Load parameters
# Load parameters
source("Analysis/00_load_parameters.R")
# Set number of cores
n_cores <- detectCores()
#n_cores <- 4
registerDoParallel(n_cores)
# Set population size for dirichlet draws
n_pop_cohort <- 29000
n_pop_trial  <- 272
n_sim <- 100 # just to test function (will be set as n_sim)
df_psa_params_MMS <- generate_psa_params(n_sim = n_sim, seed = 3730687, n_pop = n_pop_trial, scenario = "MMS",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull = "data/Modified Model Specification/weibull.csv",
file.unconditional = "data/Modified Model Specification/unconditional.csv",
file.overdose = "data/overdose.csv",
file.fentanyl = "data/fentanyl.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/Modified Model Specification/costs.csv",
file.crime_costs = "data/Modified Model Specification/crime_costs.csv",
file.qalys = "data/Modified Model Specification/qalys.csv",
file.imis_output = "outputs/Calibration/imis_output.RData")
df_outcomes_MET_PSA_MMS <- data.frame()
df_outcomes_BUP_PSA_MMS <- data.frame()
df_incremental_PSA_MMS <- data.frame()
df_ICER_PSA_MMS <- data.frame()
combine_custom_i <- function(LL1, LL2) {
df_outcomes_MET_PSA_MMS <- rbind(LL1$df_outcomes_MET_PSA_MMS, LL2$df_outcomes_MET_PSA_MMS)
df_outcomes_BUP_PSA_MMS <- rbind(LL1$df_outcomes_BUP_PSA_MMS, LL2$df_outcomes_BUP_PSA_MMS)
df_incremental_PSA_MMS  <- rbind(LL1$df_incremental_PSA_MMS, LL2$df_incremental_PSA_MMS)
df_ICER_PSA_MMS <- rbind(LL1$df_ICER_PSA_MMS, LL2$df_ICER_PSA_MMS)
return(list(df_outcomes_MET_PSA_MMS = df_outcomes_MET_PSA_MMS,
df_outcomes_BUP_PSA_MMS = df_outcomes_BUP_PSA_MMS,
df_incremental_PSA_MMS = df_incremental_PSA_MMS,
df_ICER_PSA_MMS = df_ICER_PSA_MMS))
}
df_model_benchmark_PSA <- microbenchmark("PSA - Single Core" = {for (i in 1:n_sim){
# Update parameter set for each scenario with next set of PSA drawn parameters
l_psa_input_MET_MMS <- update_param_list(l_params_all = l_params_MET_MMS, params_updated = df_psa_params_MMS[i, ])
l_psa_input_BUP_MMS <- update_param_list(l_params_all = l_params_BUP_MMS, params_updated = df_psa_params_MMS[i, ])
# Run model and generate outputs
l_outcomes_MET_MMS <- outcomes(l_params_all = l_psa_input_MET_MMS, v_params_calib = v_calib_post_map, PSA = TRUE)
l_outcomes_BUP_MMS <- outcomes(l_params_all = l_psa_input_BUP_MMS, v_params_calib = v_calib_post_map, PSA = TRUE)
# Extract cost and QALY outputs
df_outcomes_MET_PSA_MMS <- rbind(df_outcomes_MET_PSA_MMS, l_outcomes_MET_MMS$df_outcomes)
df_outcomes_BUP_PSA_MMS <- rbind(df_outcomes_BUP_PSA_MMS, l_outcomes_BUP_MMS$df_outcomes)
# Calculate ICER (societal and health sector perspective)
l_ICER_MMS <- ICER(outcomes_comp = l_outcomes_MET_MMS, outcomes_int = l_outcomes_BUP_MMS)
df_incremental_PSA_MMS <- rbind(df_incremental_PSA_MMS, l_ICER_MMS$df_incremental)
df_ICER_PSA_MMS <- rbind(df_ICER_PSA_MMS, l_ICER_MMS$df_icer)
}},
"PSA - Multi Core" = {foreach(i = 1:n_sim, .combine = combine_custom_i, .packages = 'tidyr') %dopar% {
# Update parameter set for each scenario with next set of PSA drawn parameters
l_psa_input_MET_MMS <- update_param_list(l_params_all = l_params_MET_MMS, params_updated = df_psa_params_MMS[i, ])
l_psa_input_BUP_MMS <- update_param_list(l_params_all = l_params_BUP_MMS, params_updated = df_psa_params_MMS[i, ])
# Run model and generate outputs
l_outcomes_MET_MMS <- outcomes(l_params_all = l_psa_input_MET_MMS, v_params_calib = v_calib_post_map, PSA = TRUE)
l_outcomes_BUP_MMS <- outcomes(l_params_all = l_psa_input_BUP_MMS, v_params_calib = v_calib_post_map, PSA = TRUE)
# Extract cost and QALY outputs
df_outcomes_MET_PSA_MMS <- l_outcomes_MET_MMS$df_outcomes
df_outcomes_BUP_PSA_MMS <- l_outcomes_BUP_MMS$df_outcomes
# Calculate ICER (societal and health sector perspective)
l_ICER_MMS <- ICER(outcomes_comp = l_outcomes_MET_MMS, outcomes_int = l_outcomes_BUP_MMS)
df_incremental_PSA_MMS <- l_ICER_MMS$df_incremental
df_ICER_PSA_MMS <- l_ICER_MMS$df_icer
return(list(df_outcomes_MET_PSA_MMS = df_outcomes_MET_PSA_MMS,
df_outcomes_BUP_PSA_MMS = df_outcomes_BUP_PSA_MMS,
df_incremental_PSA_MMS = df_incremental_PSA_MMS,
df_ICER_PSA_MMS = df_ICER_PSA_MMS))}},
times = 2)
plot_PSA <- autoplot(df_model_benchmark_PSA)
ggsave(plot_PSA,
filename = "Plots/Benchmark/model_benchmark_PSA.png",
width = 10, height = 7)
