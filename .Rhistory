library(lattice)
# Call model setup functions
# To-do: Move into package eventually
source("R/input_parameter_functions.R")
source("R/model_setup_functions.R")
source("R/ICER_functions.R")
# Load parameters
source("Analysis/00_load_parameters.R")
load(file = "outputs/DSA/Modified Model Specification/df_threshold_MMS.RData")
# Prepare data for plotting
df_threshold_MMS <- df_threshold_MMS %>% mutate(perc_increase = as.numeric(v_threshold_rownames_MMS))
df_threshold_qalys_MMS <- df_threshold_MMS %>% select(perc_increase, n_inc_qalys_TOTAL_life, prov)
df_threshold_costs_MMS <- df_threshold_MMS %>% select(perc_increase, n_inc_costs_TOTAL_life, prov)
# MMS
# Incremental QALYs
plot_DSA_qalys_MMS_threshold <- ggplot(df_threshold_qalys_MMS, aes(x = perc_increase, y = n_inc_qalys_TOTAL_life, group = prov)) +
theme_bw() +
scale_fill_discrete(name = "Provincial Fentanyl Prevalence") +
theme(legend.title = "Provincial Fentanyl Prevalence", legend.position = "bottom") +
geom_line(aes(color = prov), size = 1) +
scale_colour_brewer(palette = "RdYlBu") +
#scale_colour_viridis_d() +
geom_hline(yintercept = 0) +
#scale_x_continuous(labels = scales::percent) +
scale_x_continuous(labels = scales::label_number(accuracy = 1, suffix = "x"), limits = c(1, 5)) +
xlab("Increase in BNX Episode Duration") + ylab("Incremental QALYs (BNX vs. MET)") #+
plot_DSA_qalys_MMS_threshold
ggsave(plot_DSA_qalys_MMS_threshold,
filename = "Plots/DSA/Threshold SA/DSA-BNX-threshold-qalys-MMS.png",
width = 6, height = 6, dpi = 350)
# MMS
# Incremental QALYs
plot_DSA_qalys_MMS_threshold <- ggplot(df_threshold_qalys_MMS, aes(x = perc_increase, y = n_inc_qalys_TOTAL_life, group = prov)) +
theme_bw() +
scale_fill_discrete(name = "Provincial Fentanyl Prevalence") +
theme(legend.position = "bottom") +
geom_line(aes(color = prov), size = 1) +
scale_colour_brewer(palette = "RdYlBu") +
#scale_colour_viridis_d() +
geom_hline(yintercept = 0) +
#scale_x_continuous(labels = scales::percent) +
scale_x_continuous(labels = scales::label_number(accuracy = 1, suffix = "x"), limits = c(1, 5)) +
xlab("Increase in BNX Episode Duration") + ylab("Incremental QALYs (BNX vs. MET)") #+
plot_DSA_qalys_MMS_threshold
rm(list = ls()) # to clean the workspace
library(dplyr)    # to manipulate data
library(reshape2) # to transform data
library(ggplot2)  # for nice looking plots
library(tidyverse)
library(rBeta2009)
library(parallel)
library(foreach)
library(doParallel)
library(tidyr)
#library(mail)
#library(RPushbullet)
# Set number of cores
#n_cores <- detectCores()
n_cores <- 4
registerDoParallel(n_cores)
# Call model setup functions
# To-do: Move into package eventually
source("R/input_parameter_functions.R")
source("R/generate_psa_parameters.R")
source("R/model_setup_functions.R")
source("R/ICER_functions.R")
# Load parameters
source("Analysis/00_load_parameters.R")
### Process PSA results
## Read-in saved results
## Modified Model Specification
load(file = "outputs/PSA/Modified Model Specification/outcomes_MET_PSA_MMS.RData")
load(file = "outputs/PSA/Modified Model Specification/outcomes_BUP_PSA_MMS.RData")
load(file = "outputs/PSA/Modified Model Specification/incremental_PSA_MMS.RData")
load(file = "outputs/PSA/Modified Model Specification/ICER_PSA_MMS.RData")
### Summary stats ###
## Modified Model Specification ##
# Methadone
tbl_df_summary_MET_MMS <- df_outcomes_MET_PSA_MMS_comb %>% as.tibble() %>% select(n_TOTAL_costs_6mo,
n_HEALTH_SECTOR_costs_6mo,
n_CRIMINAL_costs_6mo,
n_TX_costs_6mo,
n_HRU_costs_6mo,
n_TOTAL_qalys_6mo,
n_TOTAL_costs_10yr,
n_HEALTH_SECTOR_costs_10yr,
n_CRIMINAL_costs_10yr,
n_TX_costs_10yr,
n_HRU_costs_10yr,
n_TOTAL_qalys_10yr,
n_TOTAL_costs_life,
n_HEALTH_SECTOR_costs_life,
n_CRIMINAL_costs_life,
n_TX_costs_life,
n_HRU_costs_life,
n_TOTAL_qalys_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
# BNX
tbl_df_summary_BUP_MMS <- df_outcomes_BUP_PSA_MMS_comb %>% as.tibble() %>% select(n_TOTAL_costs_6mo,
n_HEALTH_SECTOR_costs_6mo,
n_CRIMINAL_costs_6mo,
n_TX_costs_6mo,
n_HRU_costs_6mo,
n_TOTAL_qalys_6mo,
n_TOTAL_costs_10yr,
n_HEALTH_SECTOR_costs_10yr,
n_CRIMINAL_costs_10yr,
n_TX_costs_10yr,
n_HRU_costs_10yr,
n_TOTAL_qalys_10yr,
n_TOTAL_costs_life,
n_HEALTH_SECTOR_costs_life,
n_CRIMINAL_costs_life,
n_TX_costs_life,
n_HRU_costs_life,
n_TOTAL_qalys_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
# Incremental
tbl_df_summary_incremental_MMS <- df_incremental_PSA_MMS_comb %>% as.tibble() %>% select(n_inc_costs_TOTAL_6mo,
n_inc_costs_TOTAL_10yr,
n_inc_costs_TOTAL_life,
n_inc_costs_HEALTH_SECTOR_6mo,
n_inc_costs_HEALTH_SECTOR_10yr,
n_inc_costs_HEALTH_SECTOR_life,
n_inc_qalys_TOTAL_6mo,
n_inc_qalys_TOTAL_10yr,
n_inc_qalys_TOTAL_life,
n_inc_costs_TX_6mo,
n_inc_costs_TX_10yr,
n_inc_costs_TX_life,
n_inc_costs_HRU_6mo,
n_inc_costs_HRU_10yr,
n_inc_costs_HRU_life,
n_inc_costs_CRIMINAL_6mo,
n_inc_costs_CRIMINAL_10yr,
n_inc_costs_CRIMINAL_life) %>%
# tbl_df_summary_incremental_MMS <- df_incremental_PSA_MMS %>% as.tibble() %>% select(n_TOTAL_costs_6mo,
#                                                                                     n_TOTAL_costs_10yr,
#                                                                                     n_TOTAL_costs_life,
#                                                                                     n_HEALTH_SECTOR_costs_6mo,
#                                                                                     n_HEALTH_SECTOR_costs_10yr,
#                                                                                     n_HEALTH_SECTOR_costs_life,
#                                                                                     n_TOTAL_qalys_6mo,
#                                                                                     n_TOTAL_qalys_10yr,
#                                                                                     n_TOTAL_qalys_life,
#                                                                                     n_TX_costs_6mo,
#                                                                                     n_TX_costs_10yr,
#                                                                                     n_TX_costs_life,
#                                                                                     n_HRU_costs_6mo,
#                                                                                     n_HRU_costs_10yr,
#                                                                                     n_HRU_costs_life,
#                                                                                     n_CRIMINAL_costs_6mo,
#                                                                                     n_CRIMINAL_costs_10yr,
#                                                                                     n_CRIMINAL_costs_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
# ICER
tbl_df_summary_ICER_MMS <- df_ICER_PSA_MMS_comb %>% as.tibble() %>% select(n_icer_TOTAL_6mo,
n_icer_HEALTH_SECTOR_6mo,
n_icer_TOTAL_10yr,
n_icer_HEALTH_SECTOR_10yr,
n_icer_TOTAL_life,
n_icer_HEALTH_SECTOR_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
# ICER CI STABILITY
tbl_df_summary_ICER_MMS_2000 <- df_ICER_PSA_MMS_comb[1:2000, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_2500 <- df_ICER_PSA_MMS_comb[1:2500, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_3000 <- df_ICER_PSA_MMS_comb[1:3000, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_3500 <- df_ICER_PSA_MMS_comb[1:3500, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_4000 <- df_ICER_PSA_MMS_comb[1:4000, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_4500 <- df_ICER_PSA_MMS_comb[1:4500, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_5000 <- df_ICER_PSA_MMS_comb[1:5000, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_5500 <- df_ICER_PSA_MMS_comb[1:5500, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_6000 <- df_ICER_PSA_MMS_comb[1:6000, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_6500 <- df_ICER_PSA_MMS_comb[1:6500, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_7000 <- df_ICER_PSA_MMS_comb[1:7000, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_7500 <- df_ICER_PSA_MMS_comb[1:7500, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_8000 <- df_ICER_PSA_MMS_comb[1:8000, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_8500 <- df_ICER_PSA_MMS_comb[1:8500, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_9000 <- df_ICER_PSA_MMS_comb[1:9000, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_9500 <- df_ICER_PSA_MMS_comb[1:9500, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_summary_ICER_MMS_10000 <- df_ICER_PSA_MMS_comb[1:10000, ] %>% as.tibble() %>% select(n_icer_TOTAL_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
tbl_df_CI_stability <- rbind(tbl_df_summary_ICER_MMS_2000, tbl_df_summary_ICER_MMS_2500, tbl_df_summary_ICER_MMS_3000, tbl_df_summary_ICER_MMS_3500, tbl_df_summary_ICER_MMS_4000, tbl_df_summary_ICER_MMS_4500, tbl_df_summary_ICER_MMS_5000,
tbl_df_summary_ICER_MMS_5500, tbl_df_summary_ICER_MMS_6000, tbl_df_summary_ICER_MMS_6500, tbl_df_summary_ICER_MMS_7000, tbl_df_summary_ICER_MMS_7500, tbl_df_summary_ICER_MMS_8000, tbl_df_summary_ICER_MMS_8500, tbl_df_summary_ICER_MMS_9000,
tbl_df_summary_ICER_MMS_9500, tbl_df_summary_ICER_MMS_10000)
## As .csv
write.csv(tbl_df_summary_MET_MMS,
file = "outputs/PSA/Modified Model Specification/summary_outcomes_MET_PSA_MMS.csv",
row.names = FALSE)
write.csv(tbl_df_summary_BUP_MMS,
file = "outputs/PSA/Modified Model Specification/summary_outcomes_BUP_PSA_MMS.csv",
row.names = FALSE)
write.csv(tbl_df_summary_incremental_MMS,
file = "outputs/PSA/Modified Model Specification/summary_incremental_PSA_MMS.csv",
row.names = FALSE)
write.csv(tbl_df_summary_ICER_MMS,
file = "outputs/PSA/Modified Model Specification/summary_ICER_PSA_MMS.csv",
row.names = FALSE)
## As .RData ##
save(tbl_df_summary_incremental_MMS,
file = "outputs/PSA/Modified Model Specification/summary_incremental_PSA_MMS.RData")
## Incremental ##
# MMS
tbl_df_summary_inc_MMS <- df_incremental_PSA_MMS_comb %>% as.tibble() %>% mutate(BNX_dominate_TOTAL_6mo = ifelse(n_inc_costs_TOTAL_6mo < 0 & n_inc_qalys_TOTAL_6mo > 0, 1, 0),
BNX_dominate_TOTAL_10yr = ifelse(n_inc_costs_TOTAL_10yr < 0 & n_inc_qalys_TOTAL_10yr > 0, 1, 0),
BNX_dominate_TOTAL_life = ifelse(n_inc_costs_TOTAL_life < 0 & n_inc_qalys_TOTAL_life > 0, 1, 0),
BNX_dominate_HEALTH_SECTOR_6mo = ifelse(n_inc_costs_HEALTH_SECTOR_6mo < 0 & n_inc_qalys_TOTAL_6mo > 0, 1, 0),
BNX_dominate_HEALTH_SECTOR_10yr = ifelse(n_inc_costs_HEALTH_SECTOR_10yr < 0 & n_inc_qalys_TOTAL_10yr > 0, 1, 0),
BNX_dominate_HEALTH_SECTOR_life = ifelse(n_inc_costs_HEALTH_SECTOR_life < 0 & n_inc_qalys_TOTAL_life > 0, 1, 0),
MET_dominate_TOTAL_6mo = ifelse(n_inc_costs_TOTAL_6mo > 0 & n_inc_qalys_TOTAL_6mo < 0, 1, 0),
MET_dominate_TOTAL_10yr = ifelse(n_inc_costs_TOTAL_10yr > 0 & n_inc_qalys_TOTAL_10yr < 0, 1, 0),
MET_dominate_TOTAL_life = ifelse(n_inc_costs_TOTAL_life > 0 & n_inc_qalys_TOTAL_life < 0, 1, 0),
MET_dominate_HEALTH_SECTOR_6mo = ifelse(n_inc_costs_HEALTH_SECTOR_6mo > 0 & n_inc_qalys_TOTAL_6mo < 0, 1, 0),
MET_dominate_HEALTH_SECTOR_10yr = ifelse(n_inc_costs_HEALTH_SECTOR_10yr > 0 & n_inc_qalys_TOTAL_10yr < 0, 1, 0),
MET_dominate_HEALTH_SECTOR_life = ifelse(n_inc_costs_HEALTH_SECTOR_life > 0 & n_inc_qalys_TOTAL_life < 0, 1, 0))
tbl_df_dominant_sim_MMS <- tbl_df_summary_inc_MMS %>% select(BNX_dominate_TOTAL_6mo, BNX_dominate_TOTAL_10yr, BNX_dominate_TOTAL_life, BNX_dominate_HEALTH_SECTOR_6mo, BNX_dominate_HEALTH_SECTOR_10yr, BNX_dominate_HEALTH_SECTOR_life,
MET_dominate_TOTAL_6mo, MET_dominate_TOTAL_10yr, MET_dominate_TOTAL_life, MET_dominate_HEALTH_SECTOR_6mo, MET_dominate_HEALTH_SECTOR_10yr, MET_dominate_HEALTH_SECTOR_life)
tbl_df_dom_summary_MMS <- summarise_all(tbl_df_dominant_sim_MMS, mean)
write.csv(tbl_df_dom_summary_MMS,
file = "outputs/PSA/Modified Model Specification/summary_dom_PSA_MMS.csv",
row.names = FALSE)
#####################
### Plot ellipses ###
#####################
### Societal perspective ###
# MMS
df_incremental_PSA_MMS_TOTAL_6mo <- df_incremental_PSA_MMS_comb %>% as_tibble() %>% mutate(inc_qalys_MMS_6mo = n_inc_qalys_TOTAL_6mo,
inc_costs_MMS_6mo = n_inc_costs_TOTAL_6mo) %>% select(inc_qalys_MMS_6mo, inc_costs_MMS_6mo)
df_incremental_PSA_MMS_TOTAL_life <- df_incremental_PSA_MMS_comb %>% as_tibble() %>% mutate(inc_qalys_MMS_life = n_inc_qalys_TOTAL_life,
inc_costs_MMS_life = n_inc_costs_TOTAL_life) %>% select(inc_qalys_MMS_life, inc_costs_MMS_life)
# Combine
df_PSA_ellipse_TOTAL <- cbind(df_incremental_PSA_MMS_TOTAL_6mo, df_incremental_PSA_MMS_TOTAL_life)
df_PSA_ellipse_TOTAL <- df_PSA_ellipse_TOTAL %>% mutate(Scenario = "Societal Perspective")
### Health sector perspective ###
# MMS
df_incremental_PSA_MMS_HEALTH_SECTOR_6mo <- df_incremental_PSA_MMS_comb %>% as_tibble() %>% mutate(inc_qalys_MMS_6mo = n_inc_qalys_TOTAL_6mo,
inc_costs_MMS_6mo = n_inc_costs_HEALTH_SECTOR_6mo) %>% select(inc_qalys_MMS_6mo, inc_costs_MMS_6mo)
df_incremental_PSA_MMS_HEALTH_SECTOR_life <- df_incremental_PSA_MMS_comb %>% as_tibble() %>% mutate(inc_qalys_MMS_life = n_inc_qalys_TOTAL_life,
inc_costs_MMS_life = n_inc_costs_HEALTH_SECTOR_life) %>% select(inc_qalys_MMS_life, inc_costs_MMS_life)
# Combine
df_PSA_ellipse_HEALTH_SECTOR <- cbind(df_incremental_PSA_MMS_HEALTH_SECTOR_6mo, df_incremental_PSA_MMS_HEALTH_SECTOR_life)
df_PSA_ellipse_HEALTH_SECTOR <- df_PSA_ellipse_HEALTH_SECTOR %>% mutate(Scenario = "Health Sector Perspective")
# Combine all
df_PSA_ellipse <- rbind(df_PSA_ellipse_TOTAL, df_PSA_ellipse_HEALTH_SECTOR)
plot_PSA_ellipse <- ggplot() +
# Points
# MMS (Lifetime)
geom_point(data = df_PSA_ellipse, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life, colour = Scenario), alpha = 0.25, size = 1) +
# MMS (6-month)
geom_point(data = df_PSA_ellipse, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo, colour = Scenario), alpha = 0.25, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add labels
annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.38, y = -48000, label = "ICER: \n $100,000/QALY", size = 3) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.4, 0.1) +
#ylim(-40000, 75000) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-80000, 75000)) +
scale_color_manual(name = '',
breaks = c('Societal Perspective', 'Health Sector Perspective'),
values = c('Societal Perspective' = "#2c7bb6", 'Health Sector Perspective' = "#fdae61")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom") #+
plot_PSA_ellipse
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
plot_PSA_ellipse <- ggplot() +
# Points
# MMS (Lifetime)
geom_point(data = df_PSA_ellipse, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life, colour = Scenario), alpha = 0.25, size = 1) +
# MMS (6-month)
geom_point(data = df_PSA_ellipse, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo, colour = Scenario), alpha = 0.25, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add labels
annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.38, y = -48000, label = "ICER: \n $100,000/QALY", size = 3) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.4, 0.1) +
#ylim(-40000, 75000) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-80000, 75000)) +
scale_color_manual(name = '',
breaks = c('Societal Perspective', 'Health Sector Perspective'),
values = c('Societal Perspective' = "#2c7bb6", 'Health Sector Perspective' = "#d7191c")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom") #+
plot_PSA_ellipse
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
