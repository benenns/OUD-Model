file.init_dist = "data/init_dist_bup.csv", # Change initial distributions (100% in BUP)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
# Methadone scenario
l_params_MET <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_met.csv", # Change initial distributions (100% in MET)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
### Main deterministic model outputs ###
# Run Markov model and return outputs
outcomes_MET <- outcomes(l_params_all = l_params_MET)
outcomes_BUP <- outcomes(l_params_all = l_params_BUP)
# Calculate ICERs
ICER <- ICER(outcomes_comp = outcomes_MET, outcomes_int = outcomes_BUP)
# Output to csv files
# Costs
write.csv(outcomes_MET$v_costs,"outputs/costs/costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$v_costs,"outputs/costs/costs_BUP.csv", row.names = TRUE)
# QALYs
write.csv(outcomes_MET$v_qalys,"outputs/qalys/qalys_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$v_qalys,"outputs/qalys/qalys_BUP.csv", row.names = TRUE)
# ICER
write.csv(ICER$v_icer,"outputs/ICER/ICER.csv", row.names = TRUE)
View(outcomes_BUP)
library(dplyr)    # to manipulate data
library(reshape2) # to transform data
library(ggplot2)  # for nice looking plots
library(tidyverse)
# Call model setup functions
# To-do: Move into package eventually
source("R/OPTIMA_00_input_parameter_functions.R")
source("R/OPTIMA_01_model_setup_functions.R")
source("R/OPTIMA_05b_ICER_functions.R")
# Load parameters
# BNX scenario
l_params_BUP <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_bup.csv", # Change initial distributions (100% in BUP)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
# Methadone scenario
l_params_MET <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_met.csv", # Change initial distributions (100% in MET)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
### Main deterministic model outputs ###
# Run Markov model and return outputs
outcomes_MET <- outcomes(l_params_all = l_params_MET)
outcomes_BUP <- outcomes(l_params_all = l_params_BUP)
# Calculate ICERs
ICER <- ICER(outcomes_comp = outcomes_MET, outcomes_int = outcomes_BUP)
# Output to csv files
# Costs
write.csv(outcomes_MET$v_costs,"outputs/costs/costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$v_costs,"outputs/costs/costs_BUP.csv", row.names = TRUE)
# QALYs
write.csv(outcomes_MET$v_qalys,"outputs/qalys/qalys_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$v_qalys,"outputs/qalys/qalys_BUP.csv", row.names = TRUE)
View(outcomes_BUP)
# Output to csv files
# Full model trace
write.csv(outcomes_MET$m_M_trace,"outputs/trace/trace_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_M_trace,"outputs/trace/trace_BUP.csv", row.names = TRUE)
View(outcomes_MET)
View(outcomes_MET)
# Treatment
write.csv(outcomes_MET$m_TX_costs,"outputs/costs/tx_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_TX_costs,"outputs/costs/tx_costs_BUP.csv", row.names = TRUE)
# Health sector
write.csv(outcomes_MET$m_HRU_costs,"outputs/costs/hru_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_HRU_costs,"outputs/costs/hru_costs_BUP.csv", row.names = TRUE)
# Crime
write.csv(outcomes_MET$m_crime_costs,"outputs/costs/crime_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_crime_costs,"outputs/costs/crime_costs_BUP.csv", row.names = TRUE)
View(l_params_MET)
l_params_BUP <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_bup.csv", # Change initial distributions (100% in BUP)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
View(l_params_BUP)
# Load parameters
l_params_all <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist.csv", # Change initial distributions (100% in BUP)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
View(l_params_all)
library(dplyr)    # to manipulate data
library(reshape2) # to transform data
library(ggplot2)  # for nice looking plots
library(tidyverse)
# Call model setup functions
# To-do: Move into package eventually
source("R/OPTIMA_00_input_parameter_functions.R")
source("R/OPTIMA_01_model_setup_functions.R")
source("R/OPTIMA_05b_ICER_functions.R")
# Load parameters
# BNX scenario
l_params_BUP <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_bup.csv", # Change initial distributions (100% in BUP)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
View(l_params_BUP)
library(dplyr)    # to manipulate data
library(reshape2) # to transform data
library(ggplot2)  # for nice looking plots
library(tidyverse)
# Call model setup functions
# To-do: Move into package eventually
source("R/OPTIMA_00_input_parameter_functions.R")
source("R/OPTIMA_01_model_setup_functions.R")
source("R/OPTIMA_05b_ICER_functions.R")
# Load parameters
# BNX scenario
l_params_BUP <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_bup.csv", # Change initial distributions (100% in BUP)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
View(l_params_BUP)
library(dplyr)    # to manipulate data
library(reshape2) # to transform data
library(ggplot2)  # for nice looking plots
library(tidyverse)
# Call model setup functions
# To-do: Move into package eventually
source("R/OPTIMA_00_input_parameter_functions.R")
source("R/OPTIMA_01_model_setup_functions.R")
source("R/OPTIMA_05b_ICER_functions.R")
# Load parameters
# BNX scenario
l_params_BUP <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_bup.csv", # Change initial distributions (100% in BUP)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
# Methadone scenario
l_params_MET <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_met.csv", # Change initial distributions (100% in MET)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
### Main deterministic model outputs ###
# Run Markov model and return outputs
outcomes_MET <- outcomes(l_params_all = l_params_MET)
outcomes_BUP <- outcomes(l_params_all = l_params_BUP)
# Calculate ICERs
ICER <- ICER(outcomes_comp = outcomes_MET, outcomes_int = outcomes_BUP)
# Output to csv files
# Full model trace
write.csv(outcomes_MET$m_M_trace,"outputs/trace/trace_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_M_trace,"outputs/trace/trace_BUP.csv", row.names = TRUE)
# Full model costs
write.csv(outcomes_MET$m_TOTAL_costs_states,"outputs/trace/full_trace_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_TOTAL_costs_states,"outputs/trace/full_trace_costs_BUP.csv", row.names = TRUE)
# Costs
# Total
write.csv(outcomes_MET$v_costs,"outputs/costs/costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$v_costs,"outputs/costs/costs_BUP.csv", row.names = TRUE)
# Treatment
write.csv(outcomes_MET$m_TX_costs,"outputs/costs/tx_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_TX_costs,"outputs/costs/tx_costs_BUP.csv", row.names = TRUE)
# Health sector
write.csv(outcomes_MET$m_HRU_costs,"outputs/costs/hru_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_HRU_costs,"outputs/costs/hru_costs_BUP.csv", row.names = TRUE)
# Crime
write.csv(outcomes_MET$m_crime_costs,"outputs/costs/crime_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_crime_costs,"outputs/costs/crime_costs_BUP.csv", row.names = TRUE)
# QALYs
write.csv(outcomes_MET$v_qalys,"outputs/qalys/qalys_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$v_qalys,"outputs/qalys/qalys_BUP.csv", row.names = TRUE)
# ICER
write.csv(ICER$v_icer,"outputs/ICER/ICER.csv", row.names = TRUE)
### PSA model outputs
### Run Markov model for PSA draws and return outputs ###
library(dplyr)    # to manipulate data
library(reshape2) # to transform data
library(ggplot2)  # for nice looking plots
library(tidyverse)
# Call model setup functions
# To-do: Move into package eventually
source("R/OPTIMA_00_input_parameter_functions.R")
source("R/OPTIMA_01_model_setup_functions.R")
source("R/OPTIMA_05b_ICER_functions.R")
# Load parameters
# BNX scenario
l_params_BUP <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_bup.csv", # Change initial distributions (100% in BUP)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
# Methadone scenario
l_params_MET <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_met.csv", # Change initial distributions (100% in MET)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
### Main deterministic model outputs ###
# Run Markov model and return outputs
outcomes_MET <- outcomes(l_params_all = l_params_MET)
outcomes_BUP <- outcomes(l_params_all = l_params_BUP)
# Calculate ICERs
ICER <- ICER(outcomes_comp = outcomes_MET, outcomes_int = outcomes_BUP)
# Output to csv files
# Full model trace
write.csv(outcomes_MET$m_M_trace,"outputs/trace/trace_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_M_trace,"outputs/trace/trace_BUP.csv", row.names = TRUE)
# Full model costs
write.csv(outcomes_MET$m_TOTAL_costs_states,"outputs/trace/full_trace_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_TOTAL_costs_states,"outputs/trace/full_trace_costs_BUP.csv", row.names = TRUE)
# Costs
# Total
write.csv(outcomes_MET$v_costs,"outputs/costs/costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$v_costs,"outputs/costs/costs_BUP.csv", row.names = TRUE)
# Treatment
write.csv(outcomes_MET$m_TX_costs,"outputs/costs/tx_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_TX_costs,"outputs/costs/tx_costs_BUP.csv", row.names = TRUE)
# Health sector
write.csv(outcomes_MET$m_HRU_costs,"outputs/costs/hru_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_HRU_costs,"outputs/costs/hru_costs_BUP.csv", row.names = TRUE)
# Crime
write.csv(outcomes_MET$m_crime_costs,"outputs/costs/crime_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_crime_costs,"outputs/costs/crime_costs_BUP.csv", row.names = TRUE)
# QALYs
write.csv(outcomes_MET$v_qalys,"outputs/qalys/qalys_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$v_qalys,"outputs/qalys/qalys_BUP.csv", row.names = TRUE)
# ICER
write.csv(ICER$v_icer,"outputs/ICER/ICER.csv", row.names = TRUE)
### PSA model outputs
### Run Markov model for PSA draws and return outputs ###
View(ICER)
View(outcomes_BUP)
View(outcomes_MET)
View(l_params_BUP)
library(dplyr)    # to manipulate data
library(reshape2) # to transform data
library(ggplot2)  # for nice looking plots
library(tidyverse)
# Call model setup functions
# To-do: Move into package eventually
source("R/OPTIMA_00_input_parameter_functions.R")
source("R/OPTIMA_01_model_setup_functions.R")
source("R/OPTIMA_05b_ICER_functions.R")
# Load parameters
# BNX scenario
l_params_BUP <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_bup.csv", # Change initial distributions (100% in BUP)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
# Methadone scenario
l_params_MET <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist_met.csv", # Change initial distributions (100% in MET)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
### Main deterministic model outputs ###
# Run Markov model and return outputs
outcomes_MET <- outcomes(l_params_all = l_params_MET)
outcomes_BUP <- outcomes(l_params_all = l_params_BUP)
# Calculate ICERs
ICER <- ICER(outcomes_comp = outcomes_MET, outcomes_int = outcomes_BUP)
# Output to csv files
# Full model trace
write.csv(outcomes_MET$m_M_trace,"outputs/trace/trace_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_M_trace,"outputs/trace/trace_BUP.csv", row.names = TRUE)
# Full model costs
write.csv(outcomes_MET$m_TOTAL_costs_states,"outputs/trace/full_trace_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_TOTAL_costs_states,"outputs/trace/full_trace_costs_BUP.csv", row.names = TRUE)
# Costs
# Total
write.csv(outcomes_MET$v_costs,"outputs/costs/costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$v_costs,"outputs/costs/costs_BUP.csv", row.names = TRUE)
# Treatment
write.csv(outcomes_MET$m_TX_costs,"outputs/costs/tx_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_TX_costs,"outputs/costs/tx_costs_BUP.csv", row.names = TRUE)
# Health sector
write.csv(outcomes_MET$m_HRU_costs,"outputs/costs/hru_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_HRU_costs,"outputs/costs/hru_costs_BUP.csv", row.names = TRUE)
# Crime
write.csv(outcomes_MET$m_crime_costs,"outputs/costs/crime_costs_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$m_crime_costs,"outputs/costs/crime_costs_BUP.csv", row.names = TRUE)
# QALYs
write.csv(outcomes_MET$v_qalys,"outputs/qalys/qalys_MET.csv", row.names = TRUE)
write.csv(outcomes_BUP$v_qalys,"outputs/qalys/qalys_BUP.csv", row.names = TRUE)
# ICER
write.csv(ICER$v_icer,"outputs/ICER/ICER.csv", row.names = TRUE)
### PSA model outputs
### Run Markov model for PSA draws and return outputs ###
View(outcomes_BUP)
library(dplyr)    # to manipulate data
library(reshape2) # to transform data
library(ggplot2)  # for nice looking plots
library(scales)   # for dollar signs and commas
library(tidyverse)
# Call model setup functions
source("R/OPTIMA_00_input_parameter_functions.R")
source("R/OPTIMA_01_model_setup_functions.R")
# Load parameters
l_params_all <- load_all_params(file.init = "data/init_params.csv",
file.init_dist = "data/init_dist.csv", # Change initial distributions (100% in BUP)
file.mort = "data/all_cause_mortality.csv",
file.death_hr = "data/death_hr.csv",
file.frailty = "data/frailty.csv",
file.weibull_scale = "data/weibull_scale.csv",
file.weibull_shape = "data/weibull_shape.csv",
file.unconditional = "data/unconditional.csv",
file.overdose = "data/overdose.csv",
file.hiv = "data/hiv_sero.csv",
file.hcv = "data/hcv_sero.csv",
file.costs = "data/costs.csv",
file.crime_costs = "data/crime_costs.csv",
file.qalys = "data/qalys.csv")
# Run model
l_out_markov <- markov_model(l_params_all = l_params_all, err_stop = FALSE, verbose = TRUE)
#### Create plots ####
# Prepare data
df_M_agg_trace <- as.data.frame(l_out_markov$m_M_agg_trace)
df_M_agg_trace$month <- as.numeric(rownames(df_M_agg_trace))
df_M_agg_trace_plot <- df_M_agg_trace %>% gather(state, proportion, "Death", "ODF", "ODN", "REL", "BUP", "BUPC", "MET", "METC", "ABS") # health states to plot
df_M_agg_trace_sero <- as.data.frame(l_out_markov$m_M_agg_trace_sero)
df_M_agg_trace_sero$month <- as.numeric(rownames(df_M_agg_trace_sero))
df_M_agg_trace_sero_plot <- df_M_agg_trace_sero %>% gather(state, proportion, "NEG-Dead", "HIV-Dead", "HCV-Dead", "COI-Dead", "NEG-Alive", "HIV-Alive", "HCV-Alive", "COI-Alive") # health states to plot
df_M_agg_state_time <- df_M_agg_trace %>% gather(state, proportion, "ODF", "ODN", "REL", "BUP", "BUPC", "MET", "METC", "ABS") # alive health states to plot
df_M_agg_state_time <- df_M_agg_state_time %>%
group_by(state) %>%
summarise_each(funs(sum), proportion) %>%
mutate(percentage = round((proportion / sum(proportion)) * 100,1))
# Preserve order for plotting
state_order_trace <- factor(df_M_agg_trace_plot$state, levels = c("Death", "ODF", "ODN", "REL", "BUP", "BUPC", "MET", "METC", "ABS"))
state_order_trace_sero <- factor(df_M_agg_trace_sero_plot$state, levels = c("NEG-Dead", "HIV-Dead", "HCV-Dead", "COI-Dead", "NEG-Alive", "HIV-Alive", "HCV-Alive", "COI-Alive"))
state_order_time  <- factor(df_M_agg_state_time$state, levels = c("ODF", "ODN", "REL", "BUP", "BUPC", "MET", "METC", "ABS"))
#state_colours_trace <- c("#d9d9d9", "#d53e4f", "#f46d43", "#fdae61", "#ffffbf", "#e6f598", "#abdda4", "#9ecae1", "#bcbddc") # colour pallette 1
state_colours_trace2 <- c("#d9d9d9", "#252525", "#b2182b", "#d6604d", "#d9f0d3", "#1b7837", "#d1e5f0", "#9ecae1", "#bcbddc") # colour pallette 2
state_colours_trace_sero <- c("#252525", "#cb181d", "#2171b5", "#6a51a3", "#969696", "#fc9272", "#9ecae1", "#bcbddc")
#state_colours_time <- c("#d53e4f", "#f46d43", "#fdae61", "#ffffbf", "#e6f598")
state_colours_time2 <- c("#252525", "#b2182b", "#fddbc7", "#d6604d", "#d9f0d3", "#1b7837", "#9ecae1", "#bcbddc") # colour pallette 2
### Markov trace plots ###
# Model 1 (Primary health state definition)
# Base model states
main_states_trace_plot <- ggplot(df_M_agg_trace_plot, aes(x = month, y = proportion, fill = state_order_trace)) +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Time (months)") + ylab("Proportion in state") +
geom_area() +
scale_fill_manual(name = "Health States", values = state_colours_trace2)
pdf("Plots/Markov Trace/trace_states.pdf", width = 8, height = 6)
main_states_trace_plot
dev.off()
# Serostatus
sero_states_trace_plot <- ggplot(df_M_agg_trace_sero_plot, aes(x = month, y = proportion, fill = state_order_trace_sero)) +
theme_bw() +
theme(legend.position = "bottom") +
xlab("Time (months)") + ylab("Proportion in state") +
geom_area() +
scale_fill_manual(name = "Serostatus", values = state_colours_trace_sero)
pdf("Plots/Markov Trace/trace_sero.pdf", width = 8, height = 6)
sero_states_trace_plot
dev.off()
### Time spent in health states ###
main_states_time <- ggplot(df_M_agg_state_time, aes(x = state_order_time, y = proportion, fill = state_order_time)) +
theme_bw() +
theme(legend.position = "none") +
xlab("Health State") + ylab("Time") +
geom_bar(stat = "identity") +
scale_fill_manual(values = state_colours_time2) +
geom_text(aes(label = paste0(round(proportion,1)," (",percentage,"%)")), hjust = -0.25, size = 3.5) +
coord_flip(ylim = c(0, 780))
pdf(file = "Plots/Markov Trace/time_states.pdf", width = 8, height = 3)
main_states_time
dev.off()
### Combined plot ###
#plots <- list()
#plots[[1]] <- main_states_trace_plot
#plots[[2]] <- main_states_time
#layout <- matrix(c(1, 1, 2), nrow = 3, byrow = TRUE)
#pdf(file = "Plots/Markov Trace/full_trace.pdf", width = 8, height = 9)
#multiplot(plotlist = plots, layout = layout)
#dev.off()
# Model 2 (Trial health state definition)
# Model 3 (Original health state definition)
