plot_PSA_ellipse <- ggplot() +
# Points (all scenarios and time horizons)
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.4, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "gold", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "black", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "gold", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "black", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add mean point estimates
# Societal (6-month)
n_soc_6m_cost <- as.numeric(tbl_df_summary_incremental_MMS[11, 2])
# Extract mean point estimates
# Societal (6-month)
n_soc_6m_cost <- as.numeric(tbl_df_summary_incremental_MMS[11, 2])
n_soc_6m_qaly <- as.numeric(tbl_df_summary_incremental_MMS[17, 2])
# Societal (Lifetime)
n_soc_life_cost <- as.numeric(tbl_df_summary_incremental_MMS[12, 2])
n_soc_life_qaly <- as.numeric(tbl_df_summary_incremental_MMS[18, 2])
plot_PSA_ellipse <- ggplot() +
# Points (all scenarios and time horizons)
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.4, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "gold", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "black", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "gold", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "black", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add mean point estimates
# Societal (6-month)
geom_point(aes(x = n_soc_6m_qaly, y = n_soc_6m_cost), colour = "red") +
# Societal (Lifetime)
geom_point(aes(x = n_soc_life_qaly, y = n_soc_life_cost), colour = "red") +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.47, y = -60000, label = "ICER: \n $100,000/QALY", size = 4) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Societal (6-month)', 'Health Sector (6-month)', 'Societal (Lifetime)', 'Health Sector (Lifetime)'),
### UPDATE COLORS FOR R&R ###
values = c('Societal (6-month)' = "#d7191c", 'Societal (Lifetime)' = "#2c7bb6")) +
#values = c('Societal (6-month)' = "#d7191c", 'Health Sector (6-month)' = "#fdae61", 'Societal (Lifetime)' = "#2c7bb6", 'Health Sector (Lifetime)' = "#abd9e9")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "none",
text = element_text(size = 15))
plot_PSA_ellipse
#####################
### Plot ellipses ###
#####################
### Societal perspective ###
# MMS
df_incremental_PSA_MMS_TOTAL_6mo <- df_incremental_PSA_MMS_comb %>% as_tibble() %>% mutate(inc_qalys_MMS_6mo = n_inc_qalys_TOTAL_6mo,
inc_costs_MMS_6mo = n_inc_costs_TOTAL_6mo) %>% select(inc_qalys_MMS_6mo, inc_costs_MMS_6mo)
df_incremental_PSA_MMS_TOTAL_life <- df_incremental_PSA_MMS_comb %>% as_tibble() %>% mutate(inc_qalys_MMS_life = n_inc_qalys_TOTAL_life,
inc_costs_MMS_life = n_inc_costs_TOTAL_life) %>% select(inc_qalys_MMS_life, inc_costs_MMS_life)
# Combine
df_PSA_ellipse_TOTAL <- cbind(df_incremental_PSA_MMS_TOTAL_6mo, df_incremental_PSA_MMS_TOTAL_life)
df_PSA_ellipse_TOTAL <- df_PSA_ellipse_TOTAL %>% mutate(Scenario = "Societal Perspective")
# Combine all
df_PSA_ellipse <- rbind(df_PSA_ellipse_TOTAL)#, df_PSA_ellipse_HEALTH_SECTOR)
df_PSA_points_temp <- df_PSA_ellipse %>% as_tibble() %>% rename(qalys.6mo = inc_qalys_MMS_6mo,
qalys.life = inc_qalys_MMS_life,
costs.6mo = inc_costs_MMS_6mo,
costs.life = inc_costs_MMS_life) %>% mutate(ID = row_number())
df_PSA_points_qalys <- df_PSA_points_temp %>% select(ID, Scenario, qalys.6mo, qalys.life)
df_PSA_points_qalys_long <- reshape(df_PSA_points_qalys, direction = 'long',
varying = c('qalys.6mo', 'qalys.life'),
timevar = 'var',
times = c('6mo', 'life'),
v.names = 'qalys',
idvar = c('ID', 'Scenario'))
df_PSA_points_costs <- df_PSA_points_temp %>% select(ID, Scenario, costs.6mo, costs.life)
df_PSA_points_costs_long <- reshape(df_PSA_points_costs, direction = 'long',
varying = c('costs.6mo', 'costs.life'),
timevar = 'var',
times = c('6mo', 'life'),
v.names = 'costs',
idvar = c('ID', 'Scenario'))
df_PSA_points <- bind_cols(df_PSA_points_qalys_long, df_PSA_points_costs_long, .name_repair = "minimal")
df_PSA_points <- inner_join(df_PSA_points_qalys_long, df_PSA_points_costs_long, by = c('ID', 'var', 'Scenario')) %>%
mutate(index = ifelse(Scenario == "Societal Perspective" & var == "6mo", "Societal (6-month)",
ifelse(Scenario == "Societal Perspective" & var == "life", "Societal (Lifetime)",
ifelse (Scenario == "Health Sector Perspective" & var == "6mo", "Health Sector (6-month)", "Health Sector (Lifetime)"))))
# Extract mean point estimates
# Societal (6-month)
n_soc_6m_cost <- as.numeric(tbl_df_summary_incremental_MMS[11, 2])
n_soc_6m_qaly <- as.numeric(tbl_df_summary_incremental_MMS[17, 2])
# Societal (Lifetime)
n_soc_life_cost <- as.numeric(tbl_df_summary_incremental_MMS[12, 2])
n_soc_life_qaly <- as.numeric(tbl_df_summary_incremental_MMS[18, 2])
plot_PSA_ellipse <- ggplot() +
# Points (all scenarios and time horizons)
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.4, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "gold", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "black", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "gold", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "black", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add mean point estimates
# Societal (6-month)
geom_point(aes(x = n_soc_6m_qaly, y = n_soc_6m_cost), colour = "red") +
# Societal (Lifetime)
geom_point(aes(x = n_soc_life_qaly, y = n_soc_life_cost), colour = "red") +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.47, y = -60000, label = "ICER: \n $100,000/QALY", size = 4) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Societal (6-month)', 'Health Sector (6-month)', 'Societal (Lifetime)', 'Health Sector (Lifetime)'),
### UPDATE COLORS FOR R&R ###
values = c('Societal (6-month)' = "#d7191c", 'Societal (Lifetime)' = "#2c7bb6")) +
#values = c('Societal (6-month)' = "#d7191c", 'Health Sector (6-month)' = "#fdae61", 'Societal (Lifetime)' = "#2c7bb6", 'Health Sector (Lifetime)' = "#abd9e9")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "none",
text = element_text(size = 15))
plot_PSA_ellipse
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
plot_PSA_ellipse <- ggplot() +
# Points (all scenarios and time horizons)
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.4, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "#67000d", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#fb6a4a", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#08306b", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#6baed6", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "gold", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "black", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add mean point estimates
# Societal (6-month)
#geom_point(aes(x = n_soc_6m_qaly, y = n_soc_6m_cost), colour = "red") +
# Societal (Lifetime)
#geom_point(aes(x = n_soc_life_qaly, y = n_soc_life_cost), colour = "red") +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.47, y = -60000, label = "ICER: \n $100,000/QALY", size = 4) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Societal (6-month)', 'Health Sector (6-month)', 'Societal (Lifetime)', 'Health Sector (Lifetime)'),
### UPDATE COLORS FOR R&R ###
values = c('Societal (6-month)' = "#cb181d", 'Societal (Lifetime)' = "#2171b5")) +
#values = c('Societal (6-month)' = "#d7191c", 'Health Sector (6-month)' = "#fdae61", 'Societal (Lifetime)' = "#2c7bb6", 'Health Sector (Lifetime)' = "#abd9e9")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "none",
text = element_text(size = 15))
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
plot_PSA_ellipse <- ggplot() +
# Points (all scenarios and time horizons)
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.4, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "#7f2704", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#fee6ce", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#08306b", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#deebf7", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "gold", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "black", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add mean point estimates
# Societal (6-month)
#geom_point(aes(x = n_soc_6m_qaly, y = n_soc_6m_cost), colour = "red") +
# Societal (Lifetime)
#geom_point(aes(x = n_soc_life_qaly, y = n_soc_life_cost), colour = "red") +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.47, y = -60000, label = "ICER: \n $100,000/QALY", size = 4) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Societal (6-month)', 'Health Sector (6-month)', 'Societal (Lifetime)', 'Health Sector (Lifetime)'),
### UPDATE COLORS FOR R&R ###
values = c('Societal (6-month)' = "#fd8d3c", 'Societal (Lifetime)' = "#6baed6")) +
#values = c('Societal (6-month)' = "#d7191c", 'Health Sector (6-month)' = "#fdae61", 'Societal (Lifetime)' = "#2c7bb6", 'Health Sector (Lifetime)' = "#abd9e9")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "none",
text = element_text(size = 15))
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
plot_PSA_ellipse <- ggplot() +
# Points (all scenarios and time horizons)
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.4, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "#67000d", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#fee0d2", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#08306b", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#deebf7", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "gold", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "black", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add mean point estimates
# Societal (6-month)
#geom_point(aes(x = n_soc_6m_qaly, y = n_soc_6m_cost), colour = "red") +
# Societal (Lifetime)
#geom_point(aes(x = n_soc_life_qaly, y = n_soc_life_cost), colour = "red") +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.47, y = -60000, label = "ICER: \n $100,000/QALY", size = 4) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Societal (6-month)', 'Health Sector (6-month)', 'Societal (Lifetime)', 'Health Sector (Lifetime)'),
### UPDATE COLORS FOR R&R ###
values = c('Societal (6-month)' = "#fb6a4a", 'Societal (Lifetime)' = "#6baed6")) +
#values = c('Societal (6-month)' = "#d7191c", 'Health Sector (6-month)' = "#fdae61", 'Societal (Lifetime)' = "#2c7bb6", 'Health Sector (Lifetime)' = "#abd9e9")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "none",
text = element_text(size = 15))
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
plot_PSA_ellipse <- ggplot() +
# Points (all scenarios and time horizons)
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.4, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "#67000d", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#fcbba1", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#08306b", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#c6dbef", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "gold", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "black", size = 1, alpha = 1, level = 0.95) +
#stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add mean point estimates
# Societal (6-month)
#geom_point(aes(x = n_soc_6m_qaly, y = n_soc_6m_cost), colour = "red") +
# Societal (Lifetime)
#geom_point(aes(x = n_soc_life_qaly, y = n_soc_life_cost), colour = "red") +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.47, y = -60000, label = "ICER: \n $100,000/QALY", size = 4) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Societal (6-month)', 'Health Sector (6-month)', 'Societal (Lifetime)', 'Health Sector (Lifetime)'),
### UPDATE COLORS FOR R&R ###
values = c('Societal (6-month)' = "#fb6a4a", 'Societal (Lifetime)' = "#6baed6")) +
#values = c('Societal (6-month)' = "#d7191c", 'Health Sector (6-month)' = "#fdae61", 'Societal (Lifetime)' = "#2c7bb6", 'Health Sector (Lifetime)' = "#abd9e9")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "none",
text = element_text(size = 15))
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
######################
### CEAC (FOR R&R) ###
### Lifetime       ###
######################
tbl_df_CEAC <- df_incremental_PSA_MMS_comb %>% as_tibble() %>% mutate(ICER_TOTAL_life = (n_inc_costs_TOTAL_life/n_inc_qalys_TOTAL_life),
ICER_HEALTH_SECTOR_life = (n_inc_costs_HEALTH_SECTOR_life/n_inc_qalys_TOTAL_life),
BNX_dominate_TOTAL_life = ifelse(n_inc_costs_TOTAL_life < 0 & n_inc_qalys_TOTAL_life > 0, 1, 0),
BNX_dominate_HEALTH_SECTOR_life = ifelse(n_inc_costs_HEALTH_SECTOR_life < 0 & n_inc_qalys_TOTAL_life > 0, 1, 0),
MET_dominate_TOTAL_life = ifelse(n_inc_costs_TOTAL_life > 0 & n_inc_qalys_TOTAL_life < 0, 1, 0),
MET_dominate_HEALTH_SECTOR_life = ifelse(n_inc_costs_HEALTH_SECTOR_life > 0 & n_inc_qalys_TOTAL_life < 0, 1, 0),
BNX_health_loss = ifelse(n_inc_qalys_TOTAL_life < 0, 1, 0)) %>%
select(n_inc_costs_TOTAL_life, n_inc_costs_HEALTH_SECTOR_life, n_inc_qalys_TOTAL_life,
ICER_TOTAL_life, ICER_HEALTH_SECTOR_life, BNX_dominate_TOTAL_life, BNX_dominate_HEALTH_SECTOR_life,
MET_dominate_TOTAL_life, MET_dominate_HEALTH_SECTOR_life, BNX_health_loss) %>%
mutate(CE_0K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 0) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 0) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_10K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 10000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 10000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_20K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 20000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 20000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_30K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 30000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 30000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_40K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 40000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 40000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_50K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 50000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 50000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_60K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 60000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 60000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_70K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 70000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 70000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_80K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 80000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 80000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_90K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 90000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 90000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_100K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 100000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 100000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_110K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 110000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 110000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_120K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 120000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 120000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_130K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 130000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 130000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_140K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 140000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 140000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_150K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 150000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 150000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_160K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 160000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 160000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_170K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 170000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 170000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_180K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 180000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 180000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_190K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 190000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 190000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_200K_TOTAL_life = ifelse(((BNX_health_loss == 1 & ICER_TOTAL_life >= 200000) | BNX_dominate_TOTAL_life == 1) |
((BNX_health_loss == 0 & ICER_TOTAL_life <= 200000) | BNX_dominate_TOTAL_life == 1), 1, 0),
CE_0K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 0) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 0) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_10K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 10000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 10000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_20K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 20000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 20000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_30K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 30000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 30000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_40K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 40000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 40000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_50K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 50000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 50000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_60K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 60000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 60000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_70K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 70000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 70000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_80K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 80000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 80000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_90K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 90000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 90000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_100K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 100000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 100000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_110K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 110000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 110000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_120K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 120000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 120000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_130K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 130000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 130000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_140K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 140000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 140000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_150K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 150000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 150000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_160K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 160000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 160000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_170K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 170000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 170000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_180K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 180000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 180000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_190K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 190000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 190000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0),
CE_200K_HEALTH_SECTOR_life = ifelse(((BNX_health_loss == 1 & ICER_HEALTH_SECTOR_life >= 200000) | BNX_dominate_HEALTH_SECTOR_life == 1) |
((BNX_health_loss == 0 & ICER_HEALTH_SECTOR_life <= 200000) | BNX_dominate_HEALTH_SECTOR_life == 1), 1, 0))
# ADD SUMMARY POINTS AT EACH THRESHOLD
tbl_df_CEAC_summary <- tbl_df_CEAC %>% select(CE_0K_TOTAL_life, CE_10K_TOTAL_life, CE_20K_TOTAL_life, CE_30K_TOTAL_life, CE_40K_TOTAL_life, CE_50K_TOTAL_life, CE_60K_TOTAL_life, CE_70K_TOTAL_life,
CE_80K_TOTAL_life, CE_90K_TOTAL_life, CE_100K_TOTAL_life, CE_110K_TOTAL_life, CE_120K_TOTAL_life, CE_130K_TOTAL_life, CE_140K_TOTAL_life,
CE_150K_TOTAL_life, CE_160K_TOTAL_life, CE_170K_TOTAL_life, CE_180K_TOTAL_life, CE_190K_TOTAL_life, CE_200K_TOTAL_life,
CE_0K_HEALTH_SECTOR_life, CE_10K_HEALTH_SECTOR_life, CE_20K_HEALTH_SECTOR_life, CE_30K_HEALTH_SECTOR_life, CE_40K_HEALTH_SECTOR_life, CE_50K_HEALTH_SECTOR_life, CE_60K_HEALTH_SECTOR_life, CE_70K_HEALTH_SECTOR_life,
CE_80K_HEALTH_SECTOR_life, CE_90K_HEALTH_SECTOR_life, CE_100K_HEALTH_SECTOR_life, CE_110K_HEALTH_SECTOR_life, CE_120K_HEALTH_SECTOR_life, CE_130K_HEALTH_SECTOR_life, CE_140K_HEALTH_SECTOR_life,
CE_150K_HEALTH_SECTOR_life, CE_160K_HEALTH_SECTOR_life, CE_170K_HEALTH_SECTOR_life, CE_180K_HEALTH_SECTOR_life, CE_190K_HEALTH_SECTOR_life, CE_200K_HEALTH_SECTOR_life) %>% summarise_all(mean) #%>%
tbl_df_CEAC_long <- tbl_df_CEAC_summary %>% pivot_longer(
cols = starts_with("CE_"),
names_to = "Scenario",
values_to = "Proportion",
values_drop_na = TRUE
)
tbl_df_labels <- str_split_fixed(tbl_df_CEAC_long$Scenario, '_', 4) %>% as_tibble() %>% mutate(Threshold = ifelse(V2 == "0K", 0,
ifelse(V2 == "10K", 10000,
ifelse(V2 == "20K", 20000,
ifelse(V2 == "30K", 30000,
ifelse(V2 == "40K", 40000,
ifelse(V2 == "50K", 50000,
ifelse(V2 == "60K", 60000,
ifelse(V2 == "70K", 70000,
ifelse(V2 == "80K", 80000,
ifelse(V2 == "90K", 90000,
ifelse(V2 == "100K", 100000,
ifelse(V2 == "110K", 110000,
ifelse(V2 == "120K", 120000,
ifelse(V2 == "130K", 130000,
ifelse(V2 == "140K", 140000,
ifelse(V2 == "150K", 150000,
ifelse(V2 == "160K", 160000,
ifelse(V2 == "170K", 170000,
ifelse(V2 == "180K", 180000,
ifelse(V2 == "190K", 190000,
ifelse(V2 == "200K", 200000, NA))))))))))))))))))))),
Perspective = ifelse(V3 == "TOTAL", "Societal", "Health Sector")) %>% select(Threshold, Perspective)
tbl_df_CEAC_BNX <- cbind(tbl_df_labels, tbl_df_CEAC_long) %>% as_tibble() %>% mutate(Treatment = "BNX",
tx_perspective = ifelse(Perspective == "Societal", "BNX (Societal)",
ifelse(Perspective == "Health Sector", "BNX (Health Sector)", NA))) %>%
select(-Scenario) %>% relocate("Proportion", .after = "Treatment")
tbl_df_CEAC_MET <- cbind(tbl_df_labels, tbl_df_CEAC_long) %>% as_tibble() %>% mutate(Treatment = "MET",
Proportion_MET = (1 - Proportion)) %>% select(-Proportion) %>%
rename(Proportion = Proportion_MET) %>%
mutate(tx_perspective = ifelse(Perspective == "Societal", "MET (Societal)",
ifelse(Perspective == "Health Sector", "MET (Health Sector)", NA))) %>%
select(-Scenario)
tbl_df_CEAC_plot <- rbind(tbl_df_CEAC_BNX, tbl_df_CEAC_MET)
#################
### Plot CEAC ###
#################
plot_CEAC <- ggplot(data = tbl_df_CEAC_plot, aes(x = Threshold, y = Proportion)) +
geom_line(aes(linetype = Perspective, color = Treatment)) +
scale_linetype_manual(values = c("twodash", "solid"))+
scale_color_manual(values = c('#999999','#E69F00'))+
scale_x_continuous(labels = scales::dollar_format(scale = .001, suffix = "K")) +
labs(
x = "Willingness to accept health loss threshold ($/QALY)",
y = "Probability cost-effective",
color = "Treatment Type",
linetype = "Payer Perspective"
) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust = 0.02, vjust = -7),
legend.position = "right",
text = element_text(size = 15))
# Output full plot
ggsave(plot_CEAC,
filename = "Plots/PSA/CEAC.png",
width = 8, height = 6, dpi = 350)
