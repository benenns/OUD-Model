#                                                                                     n_TOTAL_qalys_6mo,
#                                                                                     n_TOTAL_qalys_10yr,
#                                                                                     n_TOTAL_qalys_life,
#                                                                                     n_TX_costs_6mo,
#                                                                                     n_TX_costs_10yr,
#                                                                                     n_TX_costs_life,
#                                                                                     n_HRU_costs_6mo,
#                                                                                     n_HRU_costs_10yr,
#                                                                                     n_HRU_costs_life,
#                                                                                     n_CRIMINAL_costs_6mo,
#                                                                                     n_CRIMINAL_costs_10yr,
#                                                                                     n_CRIMINAL_costs_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
# ICER
tbl_df_summary_ICER_MMS <- df_ICER_PSA_MMS_comb %>% as.tibble() %>% select(n_icer_TOTAL_6mo,
n_icer_HEALTH_SECTOR_6mo,
n_icer_TOTAL_10yr,
n_icer_HEALTH_SECTOR_10yr,
n_icer_TOTAL_life,
n_icer_HEALTH_SECTOR_life) %>%
gather("variable", "value") %>%
group_by(variable) %>%
summarize(mean = mean(value),
sd = sd(value),
q50 = quantile(value, probs = .5),
q025 = quantile(value, probs = .025),
q975 = quantile(value, probs = .975),
min = min(value),
max = max(value))
## Incremental ##
# MMS
tbl_df_summary_inc_MMS <- df_incremental_PSA_MMS_comb %>% as.tibble() %>% mutate(BNX_dominate_TOTAL_6mo = ifelse(n_inc_costs_TOTAL_6mo < 0 & n_inc_qalys_TOTAL_6mo > 0, 1, 0),
BNX_dominate_TOTAL_10yr = ifelse(n_inc_costs_TOTAL_10yr < 0 & n_inc_qalys_TOTAL_10yr > 0, 1, 0),
BNX_dominate_TOTAL_life = ifelse(n_inc_costs_TOTAL_life < 0 & n_inc_qalys_TOTAL_life > 0, 1, 0),
BNX_dominate_HEALTH_SECTOR_6mo = ifelse(n_inc_costs_HEALTH_SECTOR_6mo < 0 & n_inc_qalys_TOTAL_6mo > 0, 1, 0),
BNX_dominate_HEALTH_SECTOR_10yr = ifelse(n_inc_costs_HEALTH_SECTOR_10yr < 0 & n_inc_qalys_TOTAL_10yr > 0, 1, 0),
BNX_dominate_HEALTH_SECTOR_life = ifelse(n_inc_costs_HEALTH_SECTOR_life < 0 & n_inc_qalys_TOTAL_life > 0, 1, 0),
MET_dominate_TOTAL_6mo = ifelse(n_inc_costs_TOTAL_6mo > 0 & n_inc_qalys_TOTAL_6mo < 0, 1, 0),
MET_dominate_TOTAL_10yr = ifelse(n_inc_costs_TOTAL_10yr > 0 & n_inc_qalys_TOTAL_10yr < 0, 1, 0),
MET_dominate_TOTAL_life = ifelse(n_inc_costs_TOTAL_life > 0 & n_inc_qalys_TOTAL_life < 0, 1, 0),
MET_dominate_HEALTH_SECTOR_6mo = ifelse(n_inc_costs_HEALTH_SECTOR_6mo > 0 & n_inc_qalys_TOTAL_6mo < 0, 1, 0),
MET_dominate_HEALTH_SECTOR_10yr = ifelse(n_inc_costs_HEALTH_SECTOR_10yr > 0 & n_inc_qalys_TOTAL_10yr < 0, 1, 0),
MET_dominate_HEALTH_SECTOR_life = ifelse(n_inc_costs_HEALTH_SECTOR_life > 0 & n_inc_qalys_TOTAL_life < 0, 1, 0))
tbl_df_dominant_sim_MMS <- tbl_df_summary_inc_MMS %>% select(BNX_dominate_TOTAL_6mo, BNX_dominate_TOTAL_10yr, BNX_dominate_TOTAL_life, BNX_dominate_HEALTH_SECTOR_6mo, BNX_dominate_HEALTH_SECTOR_10yr, BNX_dominate_HEALTH_SECTOR_life,
MET_dominate_TOTAL_6mo, MET_dominate_TOTAL_10yr, MET_dominate_TOTAL_life, MET_dominate_HEALTH_SECTOR_6mo, MET_dominate_HEALTH_SECTOR_10yr, MET_dominate_HEALTH_SECTOR_life)
tbl_df_dom_summary_MMS <- summarise_all(tbl_df_dominant_sim_MMS, mean)
#####################
### Plot ellipses ###
#####################
### Societal perspective ###
# MMS
df_incremental_PSA_MMS_TOTAL_6mo <- df_incremental_PSA_MMS_comb %>% as_tibble() %>% mutate(inc_qalys_MMS_6mo = n_inc_qalys_TOTAL_6mo,
inc_costs_MMS_6mo = n_inc_costs_TOTAL_6mo) %>% select(inc_qalys_MMS_6mo, inc_costs_MMS_6mo)
df_incremental_PSA_MMS_TOTAL_life <- df_incremental_PSA_MMS_comb %>% as_tibble() %>% mutate(inc_qalys_MMS_life = n_inc_qalys_TOTAL_life,
inc_costs_MMS_life = n_inc_costs_TOTAL_life) %>% select(inc_qalys_MMS_life, inc_costs_MMS_life)
# Combine
df_PSA_ellipse_TOTAL <- cbind(df_incremental_PSA_MMS_TOTAL_6mo, df_incremental_PSA_MMS_TOTAL_life)
df_PSA_ellipse_TOTAL <- df_PSA_ellipse_TOTAL %>% mutate(Scenario = "Societal Perspective")
### Health sector perspective ###
# MMS
df_incremental_PSA_MMS_HEALTH_SECTOR_6mo <- df_incremental_PSA_MMS_comb %>% as_tibble() %>% mutate(inc_qalys_MMS_6mo = n_inc_qalys_TOTAL_6mo,
inc_costs_MMS_6mo = n_inc_costs_HEALTH_SECTOR_6mo) %>% select(inc_qalys_MMS_6mo, inc_costs_MMS_6mo)
df_incremental_PSA_MMS_HEALTH_SECTOR_life <- df_incremental_PSA_MMS_comb %>% as_tibble() %>% mutate(inc_qalys_MMS_life = n_inc_qalys_TOTAL_life,
inc_costs_MMS_life = n_inc_costs_HEALTH_SECTOR_life) %>% select(inc_qalys_MMS_life, inc_costs_MMS_life)
# Combine
df_PSA_ellipse_HEALTH_SECTOR <- cbind(df_incremental_PSA_MMS_HEALTH_SECTOR_6mo, df_incremental_PSA_MMS_HEALTH_SECTOR_life)
df_PSA_ellipse_HEALTH_SECTOR <- df_PSA_ellipse_HEALTH_SECTOR %>% mutate(Scenario = "Health Sector Perspective")
# Combine all
df_PSA_ellipse <- rbind(df_PSA_ellipse_TOTAL, df_PSA_ellipse_HEALTH_SECTOR)
df_PSA_points_temp <- df_PSA_ellipse %>% as_tibble() %>% rename(qalys.6mo = inc_qalys_MMS_6mo,
qalys.life = inc_qalys_MMS_life,
costs.6mo = inc_costs_MMS_6mo,
costs.life = inc_costs_MMS_life) %>% mutate(ID = row_number())
df_PSA_points <- reshape(df_PSA_points_temp, direction = 'long',
varying = c('qalys.6mo', 'qalys.life', 'costs.6mo', 'costs.life'),
timevar = 'var',
times = c('6mo', 'life'),
v.names = c('costs', 'qalys'),
idvar = c('ID', 'Scenario')) %>% mutate(index = ifelse(Scenario == "Societal Perspective" & var == "6mo", "Soc (6-month)",
ifelse(Scenario == "Societal Perspective" & var == "life", "Soc (Lifetime)",
ifelse (Scenario == "Health Sector Perspective" & var == "6mo", "HS (6-month)", "HS (Lifetime)"))))
View(df_PSA_points)
View(df_PSA_points_temp)
View(df_PSA_points)
df_PSA_points_qalys <- df_PSA_points_temp %>% filter(ID, Scenario, qalys.6mo, qalys.life)
df_PSA_points_temp <- df_PSA_ellipse %>% as_tibble() %>% rename(qalys.6mo = inc_qalys_MMS_6mo,
qalys.life = inc_qalys_MMS_life,
costs.6mo = inc_costs_MMS_6mo,
costs.life = inc_costs_MMS_life) %>% mutate(ID = row_number())
df_PSA_points_qalys <- df_PSA_points_temp %>% filter(ID, Scenario, qalys.6mo, qalys.life)
df_PSA_points_qalys <- df_PSA_points_temp %>% select(ID, Scenario, qalys.6mo, qalys.life)
View(df_PSA_points_qalys)
View(df_PSA_points_qalys)
df_PSA_points_qalys_long <- reshape(df_PSA_points_qalys, direction = 'long',
varying = c('qalys.6mo', 'qalys.life'),
timevar = 'var',
times = c('6mo', 'life'),
v.names = 'qalys',
idvar = 'ID')
df_PSA_points_qalys_long <- reshape(df_PSA_points_qalys, direction = 'long',
varying = c('qalys.6mo', 'qalys.life'),
timevar = 'var',
times = c('6mo', 'life'),
v.names = 'qalys',
idvar = c('ID', 'Scenario'))
View(df_PSA_points_qalys_long)
df_PSA_points_costs <- df_PSA_points_temp %>% select(ID, Scenario, costs.6mo, costs.life)
df_PSA_points_costs_long <- reshape(df_PSA_points_costs, direction = 'long',
varying = c('costs.6mo', 'costs.life'),
timevar = 'var',
times = c('6mo', 'life'),
v.names = 'costs',
idvar = c('ID', 'Scenario'))
View(df_PSA_points_costs_long)
df_PSA_points <- cbind(df_PSA_points_qalys_long, df_PSA_points_costs_long)
View(df_PSA_points)
View(df_PSA_points_qalys_long)
df_PSA_points <- cbind(df_PSA_points_qalys_long, df_PSA_points_costs_long$costs)
View(df_PSA_points)
df_PSA_points <- cbind(df_PSA_points_qalys_long, df_PSA_points_costs_long$costs) %>% rename(costs = df_PSA_points_costs_long$costs)
df_PSA_points <- bind_cols(df_PSA_points_qalys_long, df_PSA_points_costs_long, .name_repair = "check_unique")
df_PSA_points <- bind_cols(df_PSA_points_qalys_long, df_PSA_points_costs_long, .name_repair = "unique")
View(df_PSA_points)
df_PSA_points <- bind_cols(df_PSA_points_qalys_long, df_PSA_points_costs_long, .name_repair = "minimal")
View(df_PSA_points)
df_PSA_points <- inner_join(df_PSA_points_qalys_long, df_PSA_points_costs_long, by ='ID')
View(df_PSA_points)
View(df_PSA_points)
df_PSA_points <- inner_join(df_PSA_points_qalys_long, df_PSA_points_costs_long, by = c('ID', 'var', 'Scenario'))
View(df_PSA_points)
plot_PSA_ellipse <- ggplot() +
# Points
#geom_point(alpha = 0.25, size = 1) +
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.25, size = 1) +
# MMS (6-month)
#geom_point(data = df_PSA_points, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo, colour = Scenario), alpha = 0.25, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.38, y = -48000, label = "ICER: \n $100,000/QALY", size = 3) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.4, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-80000, 75000)) +
scale_color_manual(name = '',
breaks = c('Soc (6-month)', 'HS (6-month)', 'Soc (Lifetime)', 'HS (Lifetime)'),
values = c('Soc (6-month)' = "#abd9e9", 'HS (6-month)' = "#fdae61", 'Soc (Lifetime)' = "#2c7bb6", 'HS (Lifetime)' = "#d7191c")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom") #+
plot_PSA_ellipse
df_PSA_points <- inner_join(df_PSA_points_qalys_long, df_PSA_points_costs_long, by = c('ID', 'var', 'Scenario')) %>%
mutate(index = ifelse(Scenario == "Societal Perspective" & var == "6mo", "Soc (6-month)",
ifelse(Scenario == "Societal Perspective" & var == "life", "Soc (Lifetime)",
ifelse (Scenario == "Health Sector Perspective" & var == "6mo", "HS (6-month)", "HS (Lifetime)"))))
View(df_PSA_points)
plot_PSA_ellipse <- ggplot() +
# Points
#geom_point(alpha = 0.25, size = 1) +
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.25, size = 1) +
# MMS (6-month)
#geom_point(data = df_PSA_points, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo, colour = Scenario), alpha = 0.25, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.38, y = -48000, label = "ICER: \n $100,000/QALY", size = 3) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.4, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-80000, 75000)) +
scale_color_manual(name = '',
breaks = c('Soc (6-month)', 'HS (6-month)', 'Soc (Lifetime)', 'HS (Lifetime)'),
values = c('Soc (6-month)' = "#abd9e9", 'HS (6-month)' = "#fdae61", 'Soc (Lifetime)' = "#2c7bb6", 'HS (Lifetime)' = "#d7191c")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom") #+
plot_PSA_ellipse
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
plot_PSA_ellipse <- ggplot() +
# Points
#geom_point(alpha = 0.25, size = 1) +
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.25, size = 1) +
# MMS (6-month)
#geom_point(data = df_PSA_points, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo, colour = Scenario), alpha = 0.25, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.38, y = -48000, label = "ICER: \n $100,000/QALY", size = 3) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Soc (6-month)', 'HS (6-month)', 'Soc (Lifetime)', 'HS (Lifetime)'),
values = c('Soc (6-month)' = "#abd9e9", 'HS (6-month)' = "#fdae61", 'Soc (Lifetime)' = "#2c7bb6", 'HS (Lifetime)' = "#d7191c")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom") #+
plot_PSA_ellipse
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
plot_PSA_ellipse <- ggplot() +
# Points
#geom_point(alpha = 0.25, size = 1) +
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.25, size = 1) +
# MMS (6-month)
#geom_point(data = df_PSA_points, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo, colour = Scenario), alpha = 0.25, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.38, y = -48000, label = "ICER: \n $100,000/QALY", size = 3) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Soc (6-month)', 'HS (6-month)', 'Soc (Lifetime)', 'HS (Lifetime)'),
values = c('Soc (6-month)' = "#313695", 'HS (6-month)' = "#f46d43", 'Soc (Lifetime)' = "#2c7bb6", 'HS (Lifetime)' = "#d7191c")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom") #+
plot_PSA_ellipse
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
plot_PSA_ellipse <- ggplot() +
# Points
#geom_point(alpha = 0.25, size = 1) +
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.25, size = 1) +
# MMS (6-month)
#geom_point(data = df_PSA_points, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo, colour = Scenario), alpha = 0.25, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.38, y = -48000, label = "ICER: \n $100,000/QALY", size = 3) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Soc (6-month)', 'HS (6-month)', 'Soc (Lifetime)', 'HS (Lifetime)'),
values = c('Soc (6-month)' = "#313695", 'HS (6-month)' = "#ffffbf", 'Soc (Lifetime)' = "#2c7bb6", 'HS (Lifetime)' = "#d7191c")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom") #+
plot_PSA_ellipse
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
plot_PSA_ellipse <- ggplot() +
# Points
#geom_point(alpha = 0.25, size = 1) +
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.25, size = 1) +
# MMS (6-month)
#geom_point(data = df_PSA_points, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo, colour = Scenario), alpha = 0.25, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.38, y = -48000, label = "ICER: \n $100,000/QALY", size = 3) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Soc (6-month)', 'HS (6-month)', 'Soc (Lifetime)', 'HS (Lifetime)'),
values = c('Soc (6-month)' = "#313695", 'HS (6-month)' = "#f46d43", 'Soc (Lifetime)' = "#2c7bb6", 'HS (Lifetime)' = "#2166ac")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom") #+
plot_PSA_ellipse
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
plot_PSA_ellipse <- ggplot() +
# Points
#geom_point(alpha = 0.25, size = 1) +
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.25, size = 1) +
# MMS (6-month)
#geom_point(data = df_PSA_points, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo, colour = Scenario), alpha = 0.25, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.45, y = -60000, label = "ICER: \n $100,000/QALY", size = 3) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Soc (6-month)', 'HS (6-month)', 'Soc (Lifetime)', 'HS (Lifetime)'),
values = c('Societal (6-month)' = "#313695", 'Health Sector (6-month)' = "#f46d43", 'Societal (Lifetime)' = "#2166ac", 'Health Sector (Lifetime)' = "#d7191c")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom") #+
plot_PSA_ellipse
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
df_PSA_points <- inner_join(df_PSA_points_qalys_long, df_PSA_points_costs_long, by = c('ID', 'var', 'Scenario')) %>%
mutate(index = ifelse(Scenario == "Societal Perspective" & var == "6mo", "Societal (6-month)",
ifelse(Scenario == "Societal Perspective" & var == "life", "Societal (Lifetime)",
ifelse (Scenario == "Health Sector Perspective" & var == "6mo", "Health Sector (6-month)", "Health Sector (Lifetime)"))))
plot_PSA_ellipse <- ggplot() +
# Points
#geom_point(alpha = 0.25, size = 1) +
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.25, size = 1) +
# MMS (6-month)
#geom_point(data = df_PSA_points, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo, colour = Scenario), alpha = 0.25, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.45, y = -60000, label = "ICER: \n $100,000/QALY", size = 3) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Societal (6-month)', 'Health Sector (6-month)', 'Societal (Lifetime)', 'Health Sector (Lifetime)'),
values = c('Societal (6-month)' = "#313695", 'Health Sector (6-month)' = "#f46d43", 'Societal (Lifetime)' = "#2166ac", 'Health Sector (Lifetime)' = "#d7191c")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom") #+
plot_PSA_ellipse
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
plot_PSA_ellipse <- ggplot() +
# Points
#geom_point(alpha = 0.25, size = 1) +
geom_point(data = df_PSA_points, aes(x = qalys, y = costs, colour = index), alpha = 0.4, size = 1) +
# MMS (6-month)
#geom_point(data = df_PSA_points, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo, colour = Scenario), alpha = 0.25, size = 1) +
# Ellipses (Societal)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_TOTAL, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Ellipses (Health sector)
# MMS (6-month)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = 2, color = "white", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_6mo, y = inc_costs_MMS_6mo), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# MMS (Lifetime)
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = 2, color = "#000000", size = 1, alpha = 1, level = 0.95) +
stat_ellipse(data = df_PSA_ellipse_HEALTH_SECTOR, aes(x = inc_qalys_MMS_life, y = inc_costs_MMS_life), linetype = "solid", color = "#869397", size = 1, alpha = 1, level = 0.5) +
# Add labels
#annotate("text", x =  0.05, y = 25000, label = "Six-month \n Time-horizon", fontface = "bold", size = 3) +
#annotate("text", x = -0.15, y = 45000, label = "Lifetime \n Time-horizon", fontface = "bold", size = 3) +
annotate("text", x =  -0.47, y = -60000, label = "ICER: \n $100,000/QALY", size = 3) +
geom_vline(xintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.0) +
geom_abline(slope = 100000, intercept = 0) +
labs(y = "Incremental costs (BNX vs. MET)", x = "Incremental QALYs (BNX vs. MET)") +
xlim(-0.5, 0.1) +
scale_y_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"), limits = c(-100000, 100000)) +
scale_color_manual(name = '',
breaks = c('Societal (6-month)', 'Health Sector (6-month)', 'Societal (Lifetime)', 'Health Sector (Lifetime)'),
values = c('Societal (6-month)' = "#313695", 'Health Sector (6-month)' = "#f46d43", 'Societal (Lifetime)' = "#2166ac", 'Health Sector (Lifetime)' = "#d7191c")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key = element_rect(fill = "transparent", colour = "transparent"),
plot.title = element_text(hjust=0.02, vjust=-7),
legend.position = "bottom") #+
plot_PSA_ellipse
# Output full plot
ggsave(plot_PSA_ellipse,
filename = "Plots/PSA/PSA-Ellipse.png",
width = 10, height = 7, dpi = 350)
